/*
  __                            _
 / _|__      ____      __  ___ | |__    ___ __  __
| |_ \ \ /\ / /\ \ /\ / / / _ \| '_ \  / _ \\ \/ /
|  _| \ V  V /  \ V  V / |  __/| |_) ||  __/ >  <
|_|    \_/\_/    \_/\_/   \___||_.__/  \___|/_/\_\

Released to Public Domain.
--------------------------------------------------------------------------------------
*/
#IFNDEF _FW_WEB_EX_TH

    #DEFINE _FW_WEB_EX_TH

    #xcommand WITH WEBEXOBJECT [<obj>] => [<obj>:=] WebExContext():ObjBegin([<obj>])
    #xcommand WITH WEBEXOBJECT [<obj>] CLASS <class> [TYPE <*type*>] => [<obj>:=] WebExContext():ObjBegin(<class>():New([<(type)>]))
    #xcommand WITH WEBEXOBJECT [<obj>] CLASS <class> [<arg: ARG, ARGS> <Args,...>] => [<obj>:=] WebExContext():ObjBegin(<class>():New([<Args>]))
    #xcommand END WEBEXOBJECT [<noaddchild: NOADDCHILD>] => (WebExContext():ObjEnd(if(<.noaddchild.>,.F.,.T.)),if(Type("__oWebExContextObj__")=="O",(__oWebExContextObj__:=nil),nil))

    #xcommand WEBEXOBJECT CLEAN => WebExContext():ObjClean()

    #xtranslate .this => (__oWebExContextObj__:=WebExContext():ObjGet())
    #xtranslate .:<property_method> => (__oWebExContextObj__:=WebExContext():ObjGet(),__oWebExContextObj__:<property_method>)

    #define FWWEBEX_ID_MAX_SIZE 10

    #define FWWEBEX_WEB_TMP_PATH "\web\fwwebex\tmp\"
    #define FWWEBEX_WEB_NULL_CONTENT "__NULL__"
    #define FWWEBEX_EXTERNAL_ASSETS_IS_ENABLED .T.

    #IFNDEF _PROTHEUS_CH
        #include "totvs.ch"
    #ENDIF

    #IFNDEF _DIRECTRY_CH
        #include "directry.ch"
    #ENDIF

    #IFNDEF _PARMTYPE_CH
        #DEFINE _PARMTYPE_CH
        #include "parmtype.ch"
    #ENDIF

#ENDIF
