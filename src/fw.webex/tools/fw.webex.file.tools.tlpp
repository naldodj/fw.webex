/*
  __                            _
 / _|__      ____      __  ___ | |__    ___ __  __
| |_ \ \ /\ / /\ \ /\ / / / _ \| '_ \  / _ \\ \/ /
|  _| \ V  V /  \ V  V / |  __/| |_) ||  __/ >  <
|_|    \_/\_/    \_/\_/   \___||_.__/  \___|/_/\_\

Released to Public Domain.
--------------------------------------------------------------------------------------
*/

namespace FWWebEx

#include "fw.webex.th"

class WebFileTools
    static method HTMLFromControl(oFWWebExControl as object,cHTMLFilePath as character,cHTMLFileName as character,cHTMLContent as character,lEncodeUTF8 as logical) as logical
    static method HTMLDumpDOMFromControl(oFWWebExControl as object,cHTMLFilePath as character,cHTMLFileName as character,cHTMLContent as character,lEncodeUTF8 as logical) as logical
    static method HTMLAssetsToFile(cAssetID as character,cAssetType as character,cAssetContent as character,cAssetFilePath as character,/*<@>*/cExternalAssetsPath,/*<@>*/cLocalAssetsFilePath) as logical
    static method ObliterateFWWebExTmpFiles(lNoMercy as logical) as logical
end class

static method HTMLFromControl(oFWWebExControl,cHTMLFilePath,cHTMLFileName,cHTMLContent,lEncodeUTF8) class WebFileTools

    local cFixedID as character

    local cClassName as character

    local cSPPDrive as character
    local cSPPPath as character
    local cSPPFile as character
    local cSPPExt as character

    local lHTMLFromControl as logical

    paramtype 1 var oFWWebExControl as object
    paramtype 2 var cHTMLFilePath as character optional
    paramtype 3 var cHTMLFileName as character optional
    paramtype 4 var cHTMLContent as character optional
    paramtype 5 var lEncodeUTF8 as logical optional default .T.

    cClassName:=oFWWebExControl:ClassFullName()
    if (!Left(cClassName,8)=="FWWEBEX.")
        CLASSPARAMEXCEPTION PARAM 1 VAR oFWWebExControl TEXT cClassName MESSAGE "Object must belong to the FWWEBEX namespace. Got '"+cClassName+"' instead. Check your class declaration."
    elseif ((!MethIsMemberOf(oFWWebExControl,"ISKINDOF",.T.)).or.(!oFWWebExControl:IsKindOf("WEBEXCONTROL",.T.)))
        CLASSPARAMEXCEPTION PARAM 1 VAR oFWWebExControl TEXT cClassName MESSAGE "Object must inherit from FWWEBEX.WebExControl. Received: "+cClassName+"."
    endif

    if (empty(cHTMLFilePath))
        if (!Empty(oFWWebExControl:GetFWWebExTmpPath()))
            cHTMLFilePath:=oFWWebExControl:GetFWWebExTmpPath()
        else
            cHTMLFilePath:=FWWEBEX_WEB_TMP_PATH
        endif
    endif

    cFixedID:=Lower(oFWWebExControl:GetFixedID())

    if (Empty(cHTMLFileName))
        cHTMLFileName:=cFixedID
        cHTMLFileName+="."
        cHTMLFileName+=UUIDRandomSeq()
        cHTMLFileName+=".html"
    endif

    cHTMLContent:=oFWWebExControl:RenderHTML()
    if (lEncodeUTF8)
        cHTMLContent:=EncodeUTF8(cHTMLContent)
    endif

    cHTMLFilePath:=Lower(cHTMLFilePath)

    lHTMLFromControl:=lIsDir(cHTMLFilePath)
    if (!lHTMLFromControl)
        lHTMLFromControl:=FWMakeDir(cHTMLFilePath,.F./*[lShowMsg]*/)
    endif

    if (lHTMLFromControl)

        cHTMLFileName:=(cHTMLFilePath+Lower(cHTMLFileName))
        SplitPath(cHTMLFileName,@cSPPDrive,@cSPPPath,@cSPPFile,@cSPPExt)
        cHTMLFileName:=cSPPDrive
        cHTMLFileName+=cSPPPath
        if (!cFixedID$cSPPFile)
            cHTMLFileName+=cSPPFile
            cHTMLFileName+="."+cFixedID
        else
            cHTMLFileName+=cSPPFile
        endif
        cHTMLFileName+="."
        cHTMLFileName+=UUIDRandomSeq()
        if ((Empty(cSPPExt).or.(!(cSPPExt==".html"))))
            cHTMLFileName+=".html"
        endif

        cHTMLFileName:=Lower(cHTMLFileName)
        lHTMLFromControl:=MemoWrite(cHTMLFileName,cHTMLContent)

    endif

return(lHTMLFromControl)

static method HTMLDumpDOMFromControl(oFWWebExControl,cHTMLFilePath,cHTMLFileName,cHTMLContent,lEncodeUTF8) class WebFileTools

    local cStyle as character
    local cScript as character

    local cProcName:=ProcName() as character

    local cLocalAssetsFilePath as character
    local cExternalAssetsFilePath as character

    local cDumpFWWebExControl as character
    local cDumpFWWebExControlClone as character

    local cHTMLDumpDOMFromControlHTMLFilePath as character
    local cHTMLDumpDOMFromControlHTMLFileName as character

    local oWebExNavSide as object
    local oWebExNavSideMenuItem as object

    local oDumpPre as object
    local oDumpClonePre as object

    local oFWWebExPage as object
    local oFWWebExControlPage as object
    local oFWWebExControlPageClone as object

    paramtype 1 var oFWWebExControl as object
    paramtype 2 var cHTMLFilePath as character optional
    paramtype 3 var cHTMLFileName as character optional
    paramtype 4 var cHTMLContent as character optional
    paramtype 5 var lEncodeUTF8 as logical optional default .T.

    begin sequence

        cHTMLDumpDOMFromControlHTMLFilePath:=cHTMLFilePath
        cHTMLDumpDOMFromControlHTMLFileName:=cHTMLFileName

        lHTMLDumpDOMFromControl:=WebFileTools():HTMLFromControl(oFWWebExControl,@cHTMLDumpDOMFromControlHTMLFilePath,@cHTMLDumpDOMFromControlHTMLFileName,@cHTMLContent,@lEncodeUTF8)
        if ((!Empty(cHTMLDumpDOMFromControlHTMLFileName)).and.(File(cHTMLDumpDOMFromControlHTMLFileName)))
            fErase(cHTMLDumpDOMFromControlHTMLFileName)
        endif

        if (!lHTMLDumpDOMFromControl)
            break
        endif

        lHTMLDumpDOMFromControl:=WebFileTools():HTMLAssetsToFile(oFWWebExControl:GetFixedID(),"html",cHTMLContent,oFWWebExControl:GetFWWebExTmpPath(),@cExternalAssetsFilePath,@cLocalAssetsFilePath)
        if (!lHTMLDumpDOMFromControl)
            break
        endif

        oFWWebExControlPage:=oFWWebExControl:GetObjPageAfterRender()
        cDumpFWWebExControl:=oFWWebExControlPage:DumpDom()
        oDumpPre:=WebExControl():New("pre")
        oDumpPre:SetContent(cDumpFWWebExControl)
        cDumpFWWebExControl:=oDumpPre:RenderHTML()
        FreeObj(@oDumpPre)

        oFWWebExControlPageClone:=oFWWebExControlPage:Clone()
        cDumpFWWebExControlClone:=oFWWebExControlPage:DumpDom()
        oDumpClonePre:=WebExControl():New("pre")
        oDumpClonePre:SetContent(cDumpFWWebExControlClone)
        cDumpFWWebExControlClone:=oDumpClonePre:RenderHTML()
        FreeObj(@oDumpClonePre)

        oFWWebExControl:Clean()
        FreeObj(@oFWWebExControlPage)

        oFWWebExControlPageClone:Clean()
        FreeObj(@oFWWebExControlPageClone)

        WEBEXOBJECT CLEAN

        //Page
        WITH WEBEXOBJECT oFWWebExPage CLASS WebExPage ARGS cProcName
            //Body
            WITH WEBEXOBJECT CLASS WebExBody
                //Main
                WITH WEBEXOBJECT CLASS WebExMain
                    //Wrapper
                    WITH WEBEXOBJECT CLASS WebExControl TYPE div
                        .:AddClass("d-flex")
                        //Menu Lateral
                        WITH WEBEXOBJECT CLASS WebExSideBar
                            WITH WEBEXOBJECT oWebExNavSide CLASS WebExNavSide
                                oWebExNavSide:SetType("div")
                                oWebExNavSide:SetFixedID("webex-sidebar")
                                oWebExNavSide:AddClass("collapse")
                                oWebExNavSide:AddClass("show")
                                oWebExNavSide:SetAttr("class","collapse show")
                                oWebExNavSide:SetNavSideBrand("Side Menu")
                                oWebExNavSideMenuItem:=oWebExNavSide:AddItem("Data","#",WebExIcon():New("bi-window"))
                                oWebExNavSideMenuItem:SetAttr("data-toggledump","dumpdata")
                                oWebExNavSideMenuItem:=oWebExNavSide:AddItem("DumpDOM","#",WebExIcon():New("bi-list-nested"))
                                oWebExNavSideMenuItem:SetAttr("data-toggledump","dump")
                                oWebExNavSideMenuItem:=oWebExNavSide:AddItem("Clone","#",WebExIcon():New("bi-list-nested"))
                                oWebExNavSideMenuItem:SetAttr("data-toggledump","dumpclone")
                            END WEBEXOBJECT
                        END WEBEXOBJECT
                        //conteudo principal
                        WITH WEBEXOBJECT CLASS WebExControl TYPE div
                            .:AddClass("d-flex flex-column w-100")
                            //TopContainer
                            WITH WEBEXOBJECT CLASS WebExControl TYPE div
                                .:AddClass("d-flex align-items-center gap-2") // gap-2 adiciona espaco
                                //NavTop
                                WITH WEBEXOBJECT CLASS WebExNavTop
                                END WEBEXOBJECT
                                //Nav
                                WITH WEBEXOBJECT CLASS WebExControl TYPE nav
                                    .:AddClass("navbar shadow mb-3")
                                    WITH WEBEXOBJECT CLASS WebExControl TYPE h1
                                        .:AddClass("h4")
                                        .:SetContent(cProcName)
                                    END WEBEXOBJECT
                                END WEBEXOBJECT
                            END WEBEXOBJECT
                            //Main
                            WITH WEBEXOBJECT CLASS WebExMain
                                WITH WEBEXOBJECT CLASS WebExContainer ARGS .T.
                                    .:SetFixedID("dumpdata")
                                    .:SetAttr("style","display:none")
                                    WITH WEBEXOBJECT CLASS WebExControl TYPE div
                                        .:AddClass("embed-responsive")
                                        .:AddClass("embed-responsive-21by9")
                                        WITH WEBEXOBJECT CLASS WebExIFrame
                                            .:SetAttr("src",cLocalAssetsFilePath/*cExternalAssetsFilePath*/)
                                        END WEBEXOBJECT
                                    END WEBEXOBJECT
                                END WEBEXOBJECT
                                WITH WEBEXOBJECT CLASS WebExContainer ARGS .T.
                                    .:SetFixedID("dump")
                                    .:SetAttr("style","display:none")
                                    WITH WEBEXOBJECT CLASS WebExCardKPI ARGS "DUMP",cDumpFWWebExControl,"bg-primary",WebExIcon():New("bi-list-nested")
                                    END WEBEXOBJECT
                                END WEBEXOBJECT
                                WITH WEBEXOBJECT CLASS WebExContainer ARGS .T.
                                    .:SetFixedID("dumpclone")
                                    .:SetAttr("style","display:none")
                                    WITH WEBEXOBJECT CLASS WebExCardKPI ARGS "DUMP CLONE",cDumpFWWebExControlClone,"bg-secondary",WebExIcon():New("bi-list-nested")
                                    END WEBEXOBJECT
                                END WEBEXOBJECT
                            END WEBEXOBJECT
                        END WEBEXOBJECT
                    END WEBEXOBJECT
                END WEBEXOBJECT
            END WEBEXOBJECT
            //Style
            WITH WEBEXOBJECT CLASS WebExStyle
                beginContent var cStyle
                    #webex-sidebar {
                        transition: all 0.3s ease;
                        width: 250px;
                        overflow: hidden;
                    }
                    .navbar-brand.collapse-hide {
                        display: none !important;
                    }
                endContent
                .:SetContent(cStyle)
            END WEBEXOBJECT
            WITH WEBEXOBJECT CLASS WebExScript
                // Script para alternar exibicao dos dumps
                // Obs: JavaScript converte automaticamente atributos com hifen (-) para camelCase dentro do dataset
                /*
                    | HTML                     | JavaScript (`dataset`)  |
                    | ------------------------ | ----------------------- |
                    | `data-toggle-dump="x"`   | `el.dataset.toggleDump` |
                    | `data-user-id="42"`      | `el.dataset.userId`     |
                    | `data-coisa-louca="sim"` | `el.dataset.coisaLouca` |
                */
                beginContent var cScript
                    document.addEventListener("DOMContentLoaded",()=>{
                        document.querySelectorAll("[data-toggledump]").forEach(el=>{
                            el.addEventListener("click",()=>{
                            ["dumpdata","dump","dumpclone"].forEach(id=>{
                                document.getElementById(id).style.display = (id === el.dataset.toggledump) ? "block" : "none";
                                });
                            });
                        });
                    });
                    document.addEventListener("DOMContentLoaded", ()=>{
                        const sidebar = document.getElementById("webex-sidebar");
                        const brand = document.querySelector(".navbar-brand");

                        const observer = new MutationObserver(() => {
                            if (!sidebar.classList.contains("show")) {
                                brand.classList.add("collapse-hide");
                            } else {
                                brand.classList.remove("collapse-hide");
                            }
                        });

                        observer.observe(sidebar, { attributes: true, attributeFilter: ["class"] });
                    });
                endContent
                .:SetContent(cScript)
            END WEBEXOBJECT
        END WEBEXOBJECT

        lHTMLDumpDOMFromControl:=WebFileTools():HTMLFromControl(oFWWebExPage,@cHTMLFilePath,@cHTMLFileName,@cHTMLContent,@lEncodeUTF8)

        WEBEXOBJECT CLEAN

    end sequence

    FreeObj(@oWebExNavSideMenuItem)
    FreeObj(@oWebExNavSide)

    FreeObj(@oFWWebExPage)

return(lHTMLDumpDOMFromControl)

static method HTMLAssetsToFile(cAssetID,cAssetType,cAssetContent,cAssetPath,/*<@>*/cExternalAssetsFilePath,/*<@>*/cLocalAssetsFilePath) class WebFileTools

    local bErrorBlock as codeblock

    local cSPPDrive as character
    local cSPPPath as character
    local cSPPFile as character
    local cSPPExt as character

    local cHTMLAssetFileName as character
    local cHTMLAssetFileNameServer as character

    local lHTMLAssetsToFile as logical

    paramtype 1 var cAssetID as character
    paramtype 2 var cAssetType as character
    paramtype 3 var cAssetContent as character
    paramtype 4 var cAssetPath as character
    paramtype 5 var /*<@>*/cExternalAssetsFilePath as character optional
    paramtype 6 var /*<@>*/cLocalAssetsFilePath as character optional

    begin sequence

        cAssetType:=Lower(AllTrim(cAssetType))
        lHTMLAssetsToFile:=(cAssetType$"html|script|style")
        if (!lHTMLAssetsToFile)
            break
        endif

        lHTMLAssetsToFile:=WebApp():WebAgentIsConnected()
        if (!lHTMLAssetsToFile)
            break
        endif

        cAssetPath:=Lower(cAssetPath)
        if (!lIsDir(cAssetPath))
            lHTMLAssetsToFile:=FWMakeDir(cAssetPath,.F./*[lShowMsg]*/)
            if (!lHTMLAssetsToFile)
                break
            endif
        endif

        cAssetID+=("."+UUIDRandomSeq())
        cAssetID:=Lower(cAssetID)

        cHTMLAssetFileName:=cAssetPath
        cHTMLAssetFileName+=cAssetID
        cHTMLAssetFileName+=if(cAssetType=="html",".html",if(cAssetType=="script",".js",".css"))
        cHTMLAssetFileName:=Lower(cHTMLAssetFileName)

        lHTMLAssetsToFile:=MemoWrite(cHTMLAssetFileName,cAssetContent)
        if (!lHTMLAssetsToFile)
            break
        endif

        bErrorBlock:=ErrorBlock({|oError|Break(oError)})
        begin sequence
            //CpyF2Web(<cOrigem>,[lIsUserDiskDir],[lCompactCopy],[lChangeCase],[lUnZipFile])
            cExternalAssetsFilePath:=CpyF2Web(cHTMLAssetFileName,.T.,.T.,.F.,.F.)
        recover
            begin sequence
                //CpyF2Web(<cOrigem>,[lIsUserDiskDir],[lCompactCopy],[lChangeCase],[lUnZipFile])
                cExternalAssetsFilePath:=CpyF2Web(cHTMLAssetFileName,.F.,.T.,.F.,.F.)
            end sequence
        end sequence
        ErrorBlock(bErrorBlock)
        if ((Empty(cExternalAssetsFilePath)).and.(lIsDir(cAssetPath)))
            splitPath(cHTMLAssetFileName,@cSPPDrive,@cSPPPath,@cSPPFile,@cSPPExt)
            cHTMLAssetFileNameServer:=cAssetPath
            cHTMLAssetFileNameServer+=cSPPFile
            cHTMLAssetFileNameServer+=cSPPExt
            cExternalAssetsFilePath:=cHTMLAssetFileNameServer
            bErrorBlock:=ErrorBlock({|oError|Break(oError)})
            begin sequence
                //CpyF2Web(<cOrigem>,[lIsUserDiskDir],[lCompactCopy],[lChangeCase],[lUnZipFile])
                cExternalAssetsFilePath:=CpyF2Web(cExternalAssetsFilePath,.T.,.T.,.F.,.F.)
            recover
                begin sequence
                    //CpyF2Web(<cOrigem>,[lIsUserDiskDir],[lCompactCopy],[lChangeCase],[lUnZipFile])
                    cExternalAssetsFilePath:=CpyF2Web(cExternalAssetsFilePath,.F.,.T.,.F.,.F.)
                recover
                    cExternalAssetsFilePath:=cHTMLAssetFileNameServer
                end sequence
            end sequence
            ErrorBlock(bErrorBlock)
        endif
        splitPath(cHTMLAssetFileName,@cSPPDrive,@cSPPPath,@cSPPFile,@cSPPExt)
        cLocalAssetsFilePath:=GetTempPath()
        cLocalAssetsFilePath+=cSPPFile
        cLocalAssetsFilePath+=cSPPExt

        lHTMLAssetsToFile:=__CopyFile(cHTMLAssetFileName,cLocalAssetsFilePath)
        if (!lHTMLAssetsToFile)
            break
        endif

        lHTMLAssetsToFile:=(!Empty(cExternalAssetsFilePath).and.(File(cLocalAssetsFilePath)))
        if (lHTMLAssetsToFile)
            splitPath(cHTMLAssetFileName,@cSPPDrive,@cSPPPath,@cSPPFile,@cSPPExt)
            cLocalAssetsFilePath:=cSPPFile
            cLocalAssetsFilePath+=cSPPExt
            cExternalAssetsFilePath:=cLocalAssetsFilePath
        endif

    end sequence

return(lHTMLAssetsToFile)

static method ObliterateFWWebExTmpFiles(lNoMercy) class WebFileTools
    local oFWWebExControl as object
    paramtype 1 var lNoMercy as logical optional default .F.
    oFWWebExControl:=WebExControl():New()
    oFWWebExControl:ObliterateFWWebExTmpFiles(lNoMercy)
    FreeObj(@oFWWebExControl)
return(.T.)
