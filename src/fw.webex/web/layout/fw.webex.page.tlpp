/*
  __                            _
 / _|__      ____      __  ___ | |__    ___ __  __
| |_ \ \ /\ / /\ \ /\ / / / _ \| '_ \  / _ \\ \/ /
|  _| \ V  V /  \ V  V / |  __/| |_) ||  __/ >  <
|_|    \_/\_/    \_/\_/   \___||_.__/  \___|/_/\_\

+-----> WebExPage
        +
        |
        +-----> WebExSideBar (com WebExNavSide ou WebExNavTop)
        |
        +-----> WebExMain
                +
                |
                +-----> WebExContainer
                        +
                        |
                        +-----> Conteudo

Released to Public DoBodyMain.
--------------------------------------------------------------------------------------
*/

namespace FWWebEx

#include "fw.webex.th"

class WebExPage from WebExControl

    protected data cPageTitle as character

    protected data jPageStyle as json

    protected data oPageBody as object
    protected data oPageRender as object

    public method New(cPageTitle as character) as object
    public method AddChild(oPageChild as object) as object

    public method GetPageTitle() as character
    public method SetPageTitle(cPageTitle) as object

    public method GetPageStyle() as json
    public method AddPageStyle(cPageStyle) as object

    public method GetPageBody() as object
    public method SetPageBody(oPageBody as object) as object

    public method GetPageAfterRender() as object

    public method RenderHTML() as character

endclass

method New(cPageTitle) class WebExPage
    paramtype cPageTitle as character optional default "FWWEBEX"
    ::SetPageTitle(cPageTitle)
    ::jPageStyle:=JSONObject():New()
    _Super:New("div")
    ::AddClass("main-div")
return(self)

method AddChild(oPageChild) class WebExPage
    local cClassName as character
    paramtype 1 var oPageChild as object
    cClassName:=GetClassName(oPageChild)
    if (!Left(cClassName,8)=="FWWEBEX.")
        CLASSPARAMEXCEPTION PARAM 1 VAR oPageChild TEXT cClassName MESSAGE "Object must belong to the FWWEBEX namespace. Got '"+cClassName+"' instead. Check your class declaration."
    elseif ((!MethIsMemberOf(oPageChild,"ISKINDOF",.T.)).or.(!oPageChild:IsKindOf("WEBEXCONTROL",.T.)))
        CLASSPARAMEXCEPTION PARAM 1 VAR oPageChild TEXT cClassName MESSAGE "Object must inherit from FWWEBEX.WebExControl. Received: "+cClassName+"."
    elseif (oPageChild:IsKindOf("WEBEXPAGE",.T.))
        CLASSPARAMEXCEPTION PARAM 1 VAR oPageChild TEXT cClassName MESSAGE "Cannot nest a WebExPage inside another WebExPage. Received: "+cClassName+". A WebExPage must be the top-level container."
    endif
    if (oPageChild:IsKindOf("WEBEXBODY"))
        ::SetPageBody(oPageChild)
    else
        _Super:AddChild(oPageChild)
    endif
return(self)

method GetPageTitle() class WebExPage
return(::cPageTitle)

method SetPageTitle(cPageTitle) class WebExPage
    paramtype 1 var cPageTitle as character optional default "FWWEBEX"
    if (Empty(cPageTitle))
        cPageTitle:="FWWEBEX"
    endif
    ::cPageTitle:=cPageTitle
return(self)

method GetPageStyle() class WebExPage
return(::jPageStyle)

method AddPageStyle(cPageStyle) class WebExPage
    local oStyle as object
    paramtype 1 var cPageStyle as character
    WITH WEBEXOBJECT oStyle CLASS WebExControl TYPE style
        .:SetContent(cPageStyle)
        ::jPageStyle[oStyle:GetID()]:=oStyle
    END WEBEXOBJECT
return(self)

method GetPageBody() class WebExPage
return(::oPageBody)

method SetPageBody(oPageBody) class WebExPage
    local cClassName as character
    paramtype 1 var oPageBody as object
    cClassName:=GetClassName(oPageBody)
    if (!Left(cClassName,8)=="FWWEBEX.")
        CLASSPARAMEXCEPTION PARAM 1 VAR oPageBody TEXT cClassName MESSAGE "Object must belong to the FWWEBEX namespace. Got '"+cClassName+"' instead. Check your class declaration."
    elseif ((!MethIsMemberOf(oPageBody,"ISKINDOF",.T.)).or.(!oPageBody:IsKindOf("WEBEXCONTROL",.T.)))
        CLASSPARAMEXCEPTION PARAM 1 VAR oPageBody TEXT cClassName MESSAGE "Object must inherit from FWWEBEX.WebExControl. Received: "+cClassName+"."
    endif
    if (!oPageBody:IsKindOf("WEBEXBODY",.T.))
        ::oPageBody:=WebExBody():New()
        ::oPageBody:AddChild(oPageBody)
    else
        ::oPageBody:=oPageBody
    endif
return(self)

method GetPageAfterRender() class WebExPage
return(::oPageRender)

method RenderHTML() class WebExPage

    local cHTML as character
    local cTheme as character
    local cPageStyle as character
    local cScript as character

    local jHeader as json
    local jAssets as json
    local jHeadScripts as json
    local jPageScripts as json

    local lIsDark as logical
    local lHasMain as logical
    local lHasBody as logical

    local oPage as object
    local oPageBody as object
    local oBodyMain as object
    local oPageHeader as object

    cHTML:="<!DOCTYPE html>"

    lIsDark:=WebApp():ThemeIsDark(@cTheme)

    if ((!lIsDark).and.(!Empty(cTheme)).and.(cTheme=="SUNSET"))

        beginContent var cPageStyle

            :root {
                --totvs-red: #c62828;
                --totvs-light-gray: #f4f4f4;
                --totvs-dark-gray: #dcdcdc;
                --totvs-border: #ccc;
                --totvs-text: #000;
                --totvs-highlight: #e0e0e0;
                --totvs-btn-bg: #ffffff;
            }

            body {
                background-color: var(--totvs-light-gray) !important;
                color: var(--totvs-text) !important;
                font-family: "Segoe UI", sans-serif !important;
            }

            .btn {
                background-color: var(--totvs-btn-bg) !important;
                color: var(--totvs-red) !important;
                border: 1px solid var(--totvs-red) !important;
                border-radius: 4px !important;
                font-weight: bold;
                padding: 6px 12px;
                transition: all 0.2s ease-in-out !important;
            }

            .btn:hover,
            .btn:focus {
                background-color: var(--totvs-red) !important;
                color: #fff !important;
            }

            .form-control,
            .form-select {
                background-color: #fff !important;
                color: var(--totvs-text) !important;
                border: 1px solid var(--totvs-border) !important;
                border-radius: 3px !important;
                padding: 5px 10px;
            }

            .form-control:focus,
            .form-select:focus {
                border-color: var(--totvs-red) !important;
                box-shadow: 0 0 3px rgba(198, 40, 40, 0.4) !important;
            }

            .card {
                border: 1px solid var(--totvs-border) !important;
                border-radius: 6px;
                padding: 15px;
                color: var(--totvs-text);
                box-shadow: 0 0 10px rgba(0,0,0,0.05);
            }

            .navbar {
                background-color: #fff !important;
                border-bottom: 2px solid var(--totvs-red) !important;
            }

            .navbar .nav-link,
            .navbar-brand {
                color: var(--totvs-text) !important;
            }

            .navbar .nav-link:hover {
                color: var(--totvs-red) !important;
            }

            .table {
                background-color: #fff !important;
                color: var(--totvs-text) !important;
                border: 1px solid var(--totvs-border);
            }

            .table thead {
                background-color: var(--totvs-dark-gray) !important;
                color: var(--totvs-text) !important;
            }

            .table-bordered,
            .table-bordered th,
            .table-bordered td {
                border: 1px solid var(--totvs-border) !important;
            }

            .table tbody tr:hover {
                background-color: var(--totvs-highlight) !important;
            }

            a {
                color: var(--totvs-red) !important;
                text-decoration: none;
            }

            a:hover {
                text-decoration: underline;
            }

            input[type="checkbox"],
            input[type="radio"] {
                accent-color: var(--totvs-red) !important;
            }

        endContent

        ::AddPageStyle(cPageStyle)

    endif

    if (Empty(::oPageBody))
        oBodyMain:=WebExMain():New()
        oPageBody:=WebExBody():New()
        oPageBody:AddChild(oBodyMain)
    else
        lHasMain:=::oPageBody:IsKindOf("WEBEXMAIN")
        lHasBody:=::oPageBody:IsKindOf("WEBEXBODY")
        if ((lHasMain).or.(lHasBody))
            oPageBody:=::oPageBody
        else
            oBodyMain:=WebExMain():New()
            oBodyMain:AddChild(::oPageBody)
            oPageBody:=WebExBody():New()
            oPageBody:AddChild(oBodyMain)
        endif
    endif
    ::oPageBody:=oPageBody
    WITH WEBEXOBJECT ::oPageBody
        WITH WEBEXOBJECT CLASS WebExFooter
        END WEBEXOBJECT
    END WEBEXOBJECT
    ::oPageBody:RenderHTML()
    ::oPageBody:SetRenderChildren(.F.)

    WITH WEBEXOBJECT oPage CLASS WebExHtml
        .:SetAttr("lang","pt-br")
        if (lIsDark)
            .:SetAttr("data-bs-theme","dark")
        endif
        WITH WEBEXOBJECT oPageHeader CLASS WebExHead
            ***************************************************************************************************************************
            //Title
            WITH WEBEXOBJECT CLASS WebExTitle ARGS ::cPageTitle
            END WEBEXOBJECT
            ***************************************************************************************************************************
            //Meta
            WITH WEBEXOBJECT CLASS WebExMeta
                .:SetAttr("charset","UTF-8")
            END WEBEXOBJECT
            WITH WEBEXOBJECT CLASS WebExMeta
                .:SetAttr("application-name","FWWebEx")
            END WEBEXOBJECT
            WITH WEBEXOBJECT CLASS WebExMeta
                .:SetAttr("name","viewport")
                .:SetAttr("content","width=device-width, initial-scale=1")
            END WEBEXOBJECT
            ***************************************************************************************************************************
            //PO UI CSS
                WITH WEBEXOBJECT CLASS WebExComment
                    .:SetContent("PO UI CSS")
                END WEBEXOBJECT
                WITH WEBEXOBJECT CLASS WebExLink
                    .:SetAttr("href","https://cdn.jsdelivr.net/npm/@po-ui/style/css/po-theme-default.min.css")
                    .:SetAttr("rel","stylesheet")
                END WEBEXOBJECT
            //PO UI CSS
            ***************************************************************************************************************************
            //Bootstrap CSS
                WITH WEBEXOBJECT CLASS WebExComment
                    .:SetContent("Bootstrap CSS")
                END WEBEXOBJECT
                WITH WEBEXOBJECT CLASS WebExLink
                    .:SetAttr("href","https://cdn.jsdelivr.net/npm/bootstrap/dist/css/bootstrap.min.css")
                    .:SetAttr("rel","stylesheet")
                END WEBEXOBJECT
            //Bootstrap CSS
            ***************************************************************************************************************************
            //Bootstrap Optional JavaScript
                WITH WEBEXOBJECT CLASS WebExComment
                    .:SetContent("Optional JavaScript")
                END WEBEXOBJECT
                WITH WEBEXOBJECT CLASS WebExComment
                    .:SetContent("jQuery first, then Popper.js, then Bootstrap JS")
                END WEBEXOBJECT
                WITH WEBEXOBJECT CLASS WebExScript ARGS .F.
                    .:SetContent("https://releases.jquery.com/git/jquery-git.slim.min.js")
                END WEBEXOBJECT
                WITH WEBEXOBJECT CLASS WebExScript ARGS .F.
                    .:SetContent("https://releases.jquery.com/git/jquery-git.min.js")
                END WEBEXOBJECT
                WITH WEBEXOBJECT CLASS WebExScript ARGS .F.
                    .:SetContent("https://cdn.jsdelivr.net/npm/@popperjs/core/dist/umd/popper.min.js")
                END WEBEXOBJECT
                WITH WEBEXOBJECT CLASS WebExScript ARGS .F.
                    .:SetContent("https://cdn.jsdelivr.net/npm/bootstrap/dist/js/bootstrap.min.js")
                END WEBEXOBJECT
            //Bootstrap Optional JavaScript
            ***************************************************************************************************************************
            //Custom Header
            jHeader:=oPageHeader:GetHeader()
            aEval(jHeader:GetNames(),{|cName|oPageHeader:AddChild(jHeader[cName])})
            ***************************************************************************************************************************
            //Styles
            aEval(::jPageStyle:GetNames(),{|cName|oPageHeader:AddChild(::jPageStyle[cName])})
            ***************************************************************************************************************************
            //Scripts Head
            jHeadScripts:=oPageHeader:GetHeadScripts()
            aEval(jHeadScripts:GetNames(),{|cName|oPageHeader:AddChild(jHeadScripts[cName])})
            ***************************************************************************************************************************
        END WEBEXOBJECT
        ***************************************************************************************************************************
        WITH WEBEXOBJECT ::oPageBody
        END WEBEXOBJECT
        ***************************************************************************************************************************
        //Scripts
        jPageScripts:=oPage:GetPageScriptBundle()
        aEval(jPageScripts:GetNames(),{|cName|oPage:AddChild(jPageScripts[cName])})
        if ((::ExternalAssetsIsEnabled()).and.(::lExternalAssets))
            //External Assets (Do Not Use WebExScript Here)
            WITH WEBEXOBJECT CLASS WebExControl TYPE script
                .:SetContent("/*__EXTERNAL_ASSETS__*/")
            END WEBEXOBJECT
        endif
    END WEBEXOBJECT

    cHTML+=oPage:RenderHTML()

    ::oPageRender:=oPage

    if ((::ExternalAssetsIsEnabled()).and.(::lExternalAssets))
        jAssets:=::GetAssets()
        if (Len(jAssets:GetNames())>0)
            beginContent var cScript
                (
                    function(){
                        var useLocal = (
                            location.protocol === "file:"
                        );
                        var assets = __jAssets__;
                        Object.keys(assets).forEach(function(id){
                            var asset = assets[id];
                            var el;
                            if (asset.type === "style") {
                                el = document.createElement("link");
                                el.rel = "stylesheet";
                                el.href = useLocal ? asset.local : asset.remote;
                            } else if (asset.type === "script") {
                                el = document.createElement("script");
                                el.src = useLocal ? asset.local : asset.remote;
                                el.type = "text/javascript";
                            }
                            if (el) {
                                el.setAttribute("data-id", asset.id); // opcional, pra rastrear depois
                                document.head.appendChild(el);
                            }
                        });
                    }
                )();
            endContent
            cScript:=StrTran(cScript,"__jAssets__",jAssets:ToJSON())
            cHTML:=StrTran(cHTML,"/*__EXTERNAL_ASSETS__*/",cScript)
        endif
    endif

    FreeObj(@jHeader)
    FreeObj(@jHeadScripts)
    FreeObj(@jPageScripts)

return(cHTML)
