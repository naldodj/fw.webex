/*
  __                            _
 / _|__      ____      __  ___ | |__    ___ __  __
| |_ \ \ /\ / /\ \ /\ / / / _ \| '_ \  / _ \\ \/ /
|  _| \ V  V /  \ V  V / |  __/| |_) ||  __/ >  <
|_|    \_/\_/    \_/\_/   \___||_.__/  \___|/_/\_\

Released to Public Domain.
--------------------------------------------------------------------------------------
*/

namespace FWWebEx

#include "fw.webex.th"

class WebExIcon from WebExControl

    protected data cIconName as character
    protected data cIconType as character
    protected data cIconSize as character

    protected data lIconBefore as logical

    public method New(cIconName as character,cIconType as character,lIconBefore as logical) as object

    public method SetIconType(cIconType as character) as object
    public method SetIconSize(cIconSize as character) as object
    public method SetIconName(cIconName as character) as object

endclass

method New(cIconName,cIconType,lIconBefore) class WebExIcon
    paramtype 1 var cIconName as character
    paramtype 2 var cIconType as character optional default "bootstrap"
    paramtype 3 var lIconBefore as logical optional default .T.
    ::cIconType:=Lower(AllTrim(cIconType))
    ::cIconName:=cIconName
    ::lIconBefore:=lIconBefore
    _Super:New("i")
    _Super:SetEnableIcons()
    ::SetIconName(cIconName,cIconType)
return(self)

method SetIconType(cIconType) class WebExIcon
    paramtype 1 var cIconType as character optional default ::cIconType
    ::SetMemberData("cIconType",Lower(AllTrim(cIconType)))
return(self)

method SetIconName(cIconName,cIconType) class WebExIcon

    paramtype 1 var cIconName as character
    paramtype 2 var cIconType as character optional default ::cIconType

    ::SetMemberData("cIconName",cIconName)
    ::SetIconType(cIconType)

    // Remove classes anteriores
    if (::cIconType!=cIconType)
        do case
        case (::cIconType=="bootstrap")
            ::DelClass("bi")
            ::DelClass(::cIconName)
        case (::cIconType=="material")
            ::DelClass("material-icons")
        case (::cIconType=="fontawesome")
            ::DelClass("fa")
            ::DelClass(::cIconName)
        endcase
        ::cIconType:=cIconType
    endif

    // Adiciona classes novas conforme tipo
    do case
    case (::cIconType=="bootstrap")
        ::AddClass("bi")
        ::AddClass(::cIconName)
    case (::cIconType=="material")
        ::AddClass("material-icons")
        ::SetContent(::cIconName)
    case (::cIconType=="fontawesome")
        ::AddClass("fa")
        ::AddClass(::cIconName)
    endcase

return(self)

method SetIconSize(cIconSize) class WebExIcon
    paramtype 1 var cIconSize as character
    ::SetMemberData("cIconSize",cIconSize)
    if (::cIconType=="bootstrap")
        // Remove apenas classes tipo fs-1, fs-2, ..., fs-6 (bootstrap usa ate fs-6 oficialmente)
        ::DelClassRegex("fs-[1-6]")
        ::AddClass("fs-"+::cIconSize)
    elseif (::cIconType=="fontawesome")
        // Remove classes tipo fa-1x ate fa-10x (valores validos)
        ::DelClassRegex("fa-[1-9]x|fa-10x")
        ::AddClass("fa-"+::cIconSize)
    elseif (::cIconType=="material")
        // Remove prefixos tipo md-qualquercoisa ou so md (material usa isso como marcador solto as vezes)
        ::DelClassRegex("md(-[a-z0-9-]+)?")
        ::AddClass("md-"+::cIconSize)
    endif
return(self)
