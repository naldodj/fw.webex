/*
  __                            _
 / _|__      ____      __  ___ | |__    ___ __  __
| |_ \ \ /\ / /\ \ /\ / / / _ \| '_ \  / _ \\ \/ /
|  _| \ V  V /  \ V  V / |  __/| |_) ||  __/ >  <
|_|    \_/\_/    \_/\_/   \___||_.__/  \___|/_/\_\

+---> WebExPage ("Exemplo 007 - Funcionarios (REST + DataTable)")
      |
      +---> <style> (tabela compacta + loader animado)
      |
      +---> <div id="tableResult">
      |     |
      |     +---> <div id="fwwebex-datatable-custom-loader"> (barra de progresso animada)
      |     |
      |     +---> <table id="example" class="table table-striped table-hover display compact nowrap">
      |           |
      |           +---> <thead>
      |           |     |
      |           |     +---> <tr>
      |           |           +---> <th>Filial</th>
      |           |           +---> <th>Matricula</th>
      |           |           +---> <th>Apelido</th>
      |           |           +---> <th>Centro de Custo</th>
      |           |           +---> <th>Salario</th>
      |           |           +---> <th>Adt.Servico</th>
      |           |           +---> <th>Cat.Func.</th>
      |           |           +---> <th>DEP.IRRF</th>
      |           |           +---> <th>Sexo</th>
      |           |
      |           +---> <tbody> (populado dinamicamente via fetch AJAX)
      |
      +---> <script>
            |
            +---> DOMContentLoaded
                  |
                  +---> Insere tabela e loader em #tableResult
                  |
                  +---> Cria instancia do DataTable com:
                        |
                        +---> serverSide: true
                        +---> botoes: copy, csv, print, excel, pdf
                        +---> paginacao, busca, responsivo
                        +---> idioma pt-BR via CDN
                        +---> callbacks para mostrar/esconder o loader
                        +---> preenche dados com fetch POST para:
                              |
                              +---> REST endpoint callProcRestCrudTLPP (ou mock se ausente)
                              +---> Headers: Authorization e X-DNATech-Auth-Token
                              +---> Body com filtros, campos e paginacao
                        |
                        +---> drawCallback para manter altura da tabela entre paginas

Released to Public Domain.
--------------------------------------------------------------------------------------
*/

#include "fw.webex.th"

#include "tlpp-core.th"
#include "tlpp-rest.th"

using namespace FWWebEx

procedure u_FWWebExExample_007()
    local bExecute as codeblock
    local cHTML as character
    local cHTMLFile as character
    local cProcName:=ProcName() as character
    local oTWebChannel:=WebApp():GetTWebChannel() as object
    bExecute:={||FWMsgRun(nil,{||cHTMLFile:=FWWebExExample_007(@cHTML)},"Aguarde",cProcName)}
    FWExampleTools():Execute(bExecute,cProcName,.T.,.T.)
    if (!Empty(cHTMLFile).and.File(cHTMLFile))
        FWExampleTools():htmlFileShow(cHTML,cProcName,cHTMLFile,oTWebChannel)
        fErase(cHTMLFile)
    endif
    WebFileTools():ObliterateFWWebExTmpFiles(.T.)
return

static procedure FWWebExExample_007(cHTML as character) as character

    local cUSR as character
    local cPDW as character
    local cScript as character
    local cRESTURL as character
    local cProcName:=ProcName() as character
    local cHTMLFile:=cProcName as character
    local cTableStyle as character
    local cCredential:="" as character
    local cDNATechAuth as character
    local cAutorization as character
    local cRESTURLOAuth2 as character

    local jGetAuthorization as json

    local lUseOAuth2:=.F. as logical
    local lUseCredential as logical

    local oDivTable as object
    local oTableStyle as object

    local oFWWebExPage as object
    local oFWWebExMain as object
    local oFWWebExBody as object
    local oFWWebExScript as object

    lUseCredential:=(Type("__cCredential")=="C")
    lUseCredential:=((lUseCredential).and.(!Empty("__cCredential")))
    lUseCredential:=((lUseCredential).and.(Len(StrTokArr2(__cCredential,";"))>=4))

    if (!FWExampleTools():GetRESTCredential(@cUSR,@cPDW,@cRESTURL,@cRESTURLOAuth2,@jGetAuthorization,@lUseOAuth2))
        return
    endif

    if (!lUseCredential)
        if (valType(jGetAuthorization)=="J")
            if ((lUseOAuth2).and.(jGetAuthorization:HasProperty("Bearer")))
                cAutorization:=jGetAuthorization["Bearer"]
            elseif (jGetAuthorization:HasProperty("Basic"))
                cAutorization:=jGetAuthorization["Basic"]
            endif
            if (empty(cAutorization))
                return
            endif
            cAutorization:=WebExHelper():ConvertHeaderToJSObject(cAutorization)
        endif
    endif

    beginContent var cTableStyle

        /* Filtro Customizado */
        .datatable-filter-wrapper {
            display: inline-block;
            width: 100%;
            text-align: right; /* ou left */
        }

        /* Compactar linhas do DataTables */
        table.dataTable.compact tbody tr {
            height: 28px; /* Altura reduzida para linhas */
            line-height: 28px; /* Alinhar texto verticalmente */
        }

        table.dataTable.compact tbody td,
        table.dataTable.compact thead th {
            padding: 4px 8px; /* Reduzir padding (vertical, horizontal) */
            font-size: 12px; /* Tamanho de fonte menor */
            margin: 0; /* Remover margens */
        }

        table.dataTable.compact thead th {
            font-weight: bold; /* Manter destaque nos cabecalhos */
        }

        /* Garantir que a tabela nao tenha espacamentos extras */
        table.dataTable.compact {
            border-spacing: 0;
            border-collapse: collapse;
        }

        /* Ajustar linhas vazias adicionadas pelo drawCallback */
        table.dataTable.compact tr.empty-row td {
            padding: 0;
            height: 20px; /* Menor altura para linhas vazias */
        }

        /* Evitar quebras de linha e overflow */
        table.dataTable.compact td {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

    endContent
    oTableStyle:=WebExStyle():New()
    oTableStyle:SetContent(cTableStyle)

    // Adiciona container de tabela
    oDivTable:=WebExDiv():New()
    oDivTable:SetFixedID("tableResult")

    /*
        Tabela do DOM (so pra referencia)
        https://datatables.net/reference/option/dom
        | Letra | Elemento que aparece           |
        | ----- | ------------------------------ |
        | **B** | Botoes (exportacao etc.)       |
        | **l** | Seletor de "linhas por pagina" |
        | **f** | Campo de busca (filtro)        |
        | **r** | Texto "processing..."          |
        | **t** | Tabela                         |
        | **i** | Info de "Mostrando x a y de z" |
        | **p** | Paginacao                      |
    */
    // Script com server-side pagination ativado
    beginContent var cScript
        document.addEventListener('DOMContentLoaded', function() {

            document.getElementById('tableResult').innerHTML = `
                <!-- fora da tabela, sera movido via JS -->
                <div id="meuFiltroCustom" class="datatable-filter-wrapper mb-2">
                    <div class="input-group input-group-sm">
                        <select id="searchField" class="form-select form-select-sm"></select>
                        <input id="searchValue" type="text" class="form-control" placeholder="Digite o valor..." />
                        <button id="btnSearch" class="btn btn-primary" type="button">Pesquisar</button>
                    </div>
                </div>
                <table id="example" class="table table-striped table-hover display compact nowrap">
                    <thead>
                        <tr>
                            <th>Filial</th>
                            <th>Matr&iacute;cula</th>
                            <th>Apelido</th>
                            <th>Centro de Custo</th>
                            <th>Sal&aacute;rio</th>
                            <th>Adt.Servi&ccedil;o</th>
                            <th>Cat.Func.</th>
                            <th>Dep.IRRF.</th>
                            <th>Sexo</th>
                        </tr>
                    </thead>
                </table>`;

            const yesFields = 'RA_FILIAL,RA_MAT,RA_APELIDO,RA_CC,RA_SALARIO,RA_ADTPOSE,RA_CATFUNC,RA_DEPIR,RA_SEXO';

            function montarCampoSelect() {
                const fields = yesFields.split(',');
                const select = document.getElementById("searchField");
                fields.forEach(field => {
                    const opt = document.createElement("option");
                    opt.value = field.trim();
                    opt.textContent = field.trim();
                    select.appendChild(opt);
                });
            }

            montarCampoSelect(); // monta o select com base no yesFields

            // Adiciona o filtro customizado no lugar da search bar padrao
            const filtroEl = document.getElementById("meuFiltroCustom");
            const containerFiltro = document.querySelector("div.topFiltro");
            if (containerFiltro && filtroEl) {
                containerFiltro.appendChild(filtroEl);
                filtroEl.style.display = 'block'; // caso esteja oculto
            }

            const table = new DataTable('#example', {
                serverSide: true,
                processing: false,
                dom: '<"topFiltro">Blfrtip'.replace('f',' '), // cria um placeholder "topFiltro" no lugar do search
                lengthMenu: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,25,30,35,40,45,50,100,-1],
                pageLength: 10,//DEFAULT
                buttons: [
                    'copy',
                    'csv',
                    'print',
                    {
                        extend: 'excelHtml5',
                        title: 'u_FWWebExExample_007',
                        filename: 'relatorio_excel',
                        autoFilter: true
                    },
                    {
                        extend: 'pdf',
                        title: 'u_FWWebExExample_007',
                        filename: 'relatorio_pdf'
                    }
                ],
                responsive: true,
                responsive: false, // Desativar responsividade para reduzir espaco (se nao for essencial)
                className: 'compact', // Ja presente, mantido para reforcar
                language: {
                    url: 'https://cdn.datatables.net/plug-ins/2.3.2/i18n/pt-BR.json',
                    lengthLabels: {
                        '-1': 'Todos' //https://datatables.net/reference/option/lengthMenu
                    }
                },
                "preDrawCallback": function(settings) {
                    $('#fwwebex-datatable-custom-loader').show();
                },
                "drawCallback": function(settings) {
                    // This drawCallback ensures consistent table height across pages.
                    // It calculates how many empty rows are needed to fill the remaining space,
                    // and appends them to the table so all pages have the same visual height.
                    const api = this.api();
                    const rows = api.rows({ page: 'current' }).count();
                    const pageSize = api.page.len();
                    const emptyRows = pageSize - rows;
                    for (let i = 0; i < emptyRows; i++) {
                        $('#example tbody').append('<tr class="empty-row"><td colspan="999">&nbsp;</td></tr>');
                    }
                    $('#fwwebex-datatable-custom-loader').hide();
                },
                ajax: function (data, callback) {

                    const pageNumber = Math.floor(data.start / data.length) + 1;
                    const rowsPerPage = data.length === -1 ? 999999 : data.length;

                    __GET_CREDENTIAL__

                    fetch('https://localhost:9898/rest/callProcRestCrudTLPP/post/', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            <Autorization>,
                            <DNATechAuth>
                        },
                        body: JSON.stringify({
                            ClassName: 'userRestCrudTLPPCoreFunction',
                            FunctionName: 'dna.tech.codAliasPost',
                            codAlias: 'SRA',
                            yesFields: 'RA_FILIAL,RA_MAT,RA_APELIDO,RA_CC,RA_SALARIO,RA_ADTPOSE,RA_CATFUNC,RA_DEPIR,RA_SEXO',
                            Filter: Object.assign({
                                RA_SEXO: 'M'
                            }, filtroCampo && filtroValor ? { [filtroCampo]: filtroValor } : {}),
                            PageNumber: pageNumber,
                            RowspPage: rowsPerPage,
                            cEmp: '99',
                            cFil: '01',
                            lChkPrepEnv: false,
                            lHTTPCTLen: true,
                            lFWHTTpEncode: true,
                            cHTTPCTType: 'application/json; charset=UTF-8',
                            lHTTPCTType: true
                        })
                    })
                    .then(res => {
                        if (!res.ok) throw new Error('HTTP ' + res.status);
                        return res.text();
                    })
                    .then(text => {
                        console.log('RAW response:', text);
                        const json = JSON.parse(text);
                        if (!json.table || !json.table.items) throw new Error('JSON incompleto');
                        const rows = json.table.items.map(row => {
                            const i = row.detail.items;
                            return [
                                        i.RA_FILIAL || '',
                                        i.RA_MAT || '',
                                        i.RA_APELIDO || '',
                                        i.RA_CC || '',
                                        i.RA_SALARIO || '',
                                        i.RA_ADTPOSE || '',
                                        i.RA_CATFUNC || '',
                                        i.RA_DEPIR || '',
                                        i.RA_SEXO || ''
                                    ];
                        });
                        callback({
                            data: rows,
                            recordsTotal: json.TotalRows,
                            recordsFiltered: json.TotalRows
                        });
                    })
                    .catch(err => console.error('Erro ao carregar dados:', err));
                }
            });

            let filtroCampo = "";
            let filtroValor = "";

            document.getElementById("btnSearch").addEventListener("click", function () {
                filtroCampo = document.getElementById("searchField").value;
                filtroValor = document.getElementById("searchValue").value.trim();
                table.ajax.reload(); // recarrega o DataTable usando o novo filtro
            });

             //captura do evento de processamento
            table.on('processing.dt', function (e, settings, processing) {
                if (processing) {
                    $('#fwwebex-datatable-custom-loader').show();
                } else {
                    $('#fwwebex-datatable-custom-loader').hide();
                }
            });

        });

    endContent

    if (lUseCredential)

        beginContent var cCredential

            // Recupera o ERPTOKEN do sessionStorage

                let token = null;
                try {
                    const erpTokenData = JSON.parse(sessionStorage.getItem('ERPTOKEN') || '{}');
                    token = erpTokenData?.access_token || null;
                } catch (e) {
                    console.warn('Nao foi possivel ler o ERPTOKEN:', e);
                }

                if (!token) {
                    console.error('Token OAuth2 nao encontrado! Faca login no Protheus antes.');
                    return;
                }

        endContent

    endif

    if (!FindClass("DNA.TECH.USERRESTCRUDTLPP"))
        //Considerando que callProcRestCrudTLPP depende de DNA.TECH.USERRESTCRUDTLPP
        //u_callProcRestCrudTLPPEx007 atuara como um mock da callProcRestCrudTLPP.
        cScript:=WebExHelper():StrReplace(;
            cScript;
            ,{"callProcRestCrudTLPP":"u_callProcRestCrudTLPPEx007"};
        )
    else
        cDNATechAuth:=MemoRead("\dna.tech\authentication\authentication.aut")
        cDNATechAuth:=Encode64("token:"+cDNATechAuth)
        cDNATechAuth:="X-DNATech-Auth-Token: "+cDNATechAuth
        cDNATechAuth:=WebExHelper():ConvertHeaderToJSObject(cDNATechAuth)
        cScript:=WebExHelper():StrReplace(cScript,{{"<DNATechAuth>",cDNATechAuth}})
    endif

    if (lUseCredential)
        cScript:=WebExHelper():StrReplace(;
            cScript;
            ,{;
                 {"<Autorization>","'Authorization': `Bearer ${token}`"};
                ,{"https://localhost:9898/rest/",cRESTURL};
                ,{"__GET_CREDENTIAL__",cCredential};
            };
        )
    else
        cScript:=WebExHelper():StrReplace(;
            cScript;
            ,{;
                 {"<Autorization>",cAutorization};
                ,{"https://localhost:9898/rest/",cRESTURL};
                ,{"__GET_CREDENTIAL__",cCredential};
            };
        )
    endif

    oFWWebExScript:=WebExScript():New()
    oFWWebExScript:SetContent(cScript)
    oFWWebExScript:SetExternalAssets(.F.)

    oFWWebExMain:=WebExMain():New()
    oFWWebExMain:AddChild(oDivTable)

    oFWWebExBody:=WebExBody():New()
    oFWWebExBody:AddChild(oFWWebExMain)

    oFWWebExPage:=WebExPage():New("Exemplo 007 - Funcionarios (REST + DataTable)")
    oFWWebExPage:SetEnableDataTable()
    oFWWebExPage:AddChild(oFWWebExBody)

    WebFileTools():HTMLFromControl(oFWWebExPage,oFWWebExPage:GetFWWebExTmpPath(),@cHTMLFile,@cHTML,.T.)

    oFWWebExPage:Clean()

    FreeObj(@oFWWebExPage)
    FreeObj(@oFWWebExMain)
    FreeObj(@oFWWebExBody)
    FreeObj(@oFWWebExScript)
    FreeObj(@oTableStyle)
    FreeObj(@oDivTable)

return(cHTMLFile)

//Considerando que callProcRestCrudTLPP depende de DNA.TECH.USERRESTCRUDTLPP
//u_callProcRestCrudTLPPEx007 atuara como um mock da callProcRestCrudTLPP.
@Post(endpoint="/u_callProcRestCrudTLPPEx007/post/",description="u_callProcRestCrudTLPPEx007")
function u_callProcRestCrudTLPPEx007()

    local cJSON as character

    local jHeader as json

    beginContent var cJSON
{
    "method": "get",
    "path": "/userRestCrudADVPL/codAlias/",
    "PageNumber": 1,
    "RowspPage": 10,
    "table": {
        "alias": "SRA",
        "name": "SRA990",
        "description": "Funcionarios",
        "index": "RA_FILIAL+RA_MAT",
        "items": [
            {
                "detail": {
                    "row": 1,
                    "key": "01000004",
                    "recNo": 4,
                    "items": {
                        "RA_FILIAL": "01",
                        "RA_MAT": "000004",
                        "RA_SEXO": "M",
                        "RA_APELIDO": "ANDREI",
                        "RA_CC": "10206001",
                        "RA_DEPIR": "02",
                        "RA_CATFUNC": "M",
                        "RA_SALARIO": 6433.57,
                        "RA_ADTPOSE": "***N**"
                    }
                }
            },
            {
                "detail": {
                    "row": 2,
                    "key": "01000007",
                    "recNo": 7,
                    "items": {
                        "RA_FILIAL": "01",
                        "RA_MAT": "000007",
                        "RA_SEXO": "M",
                        "RA_APELIDO": "CLAUDINEI",
                        "RA_CC": "10203001",
                        "RA_DEPIR": "03",
                        "RA_CATFUNC": "M",
                        "RA_SALARIO": 3045.6,
                        "RA_ADTPOSE": "***N**"
                    }
                }
            },
            {
                "detail": {
                    "row": 3,
                    "key": "01000008",
                    "recNo": 8,
                    "items": {
                        "RA_FILIAL": "01",
                        "RA_MAT": "000008",
                        "RA_SEXO": "M",
                        "RA_APELIDO": "FABIO",
                        "RA_CC": "10303017",
                        "RA_DEPIR": "01",
                        "RA_CATFUNC": "M",
                        "RA_SALARIO": 8216,
                        "RA_ADTPOSE": "***N**"
                    }
                }
            },
            {
                "detail": {
                    "row": 4,
                    "key": "01000010",
                    "recNo": 10,
                    "items": {
                        "RA_FILIAL": "01",
                        "RA_MAT": "000010",
                        "RA_SEXO": "M",
                        "RA_APELIDO": "LEONARDO",
                        "RA_CC": "10303017",
                        "RA_DEPIR": "01",
                        "RA_CATFUNC": "M",
                        "RA_SALARIO": 12498.29,
                        "RA_ADTPOSE": "***N**"
                    }
                }
            },
            {
                "detail": {
                    "row": 5,
                    "key": "01000012",
                    "recNo": 12,
                    "items": {
                        "RA_FILIAL": "01",
                        "RA_MAT": "000012",
                        "RA_SEXO": "M",
                        "RA_APELIDO": "EDVALDO ALVES",
                        "RA_CC": "10304033",
                        "RA_DEPIR": "00",
                        "RA_CATFUNC": "M",
                        "RA_SALARIO": 2998.82,
                        "RA_ADTPOSE": "***N**"
                    }
                }
            },
            {
                "detail": {
                    "row": 6,
                    "key": "01000013",
                    "recNo": 13,
                    "items": {
                        "RA_FILIAL": "01",
                        "RA_MAT": "000013",
                        "RA_SEXO": "M",
                        "RA_APELIDO": "MARCOS",
                        "RA_CC": "10201008",
                        "RA_DEPIR": "03",
                        "RA_CATFUNC": "M",
                        "RA_SALARIO": 10560.44,
                        "RA_ADTPOSE": "***N**"
                    }
                }
            },
            {
                "detail": {
                    "row": 7,
                    "key": "01000014",
                    "recNo": 14,
                    "items": {
                        "RA_FILIAL": "01",
                        "RA_MAT": "000014",
                        "RA_SEXO": "M",
                        "RA_APELIDO": "WERICLES ARAUJO",
                        "RA_CC": "10304033",
                        "RA_DEPIR": "02",
                        "RA_CATFUNC": "M",
                        "RA_SALARIO": 2998.82,
                        "RA_ADTPOSE": "***N**"
                    }
                }
            },
            {
                "detail": {
                    "row": 8,
                    "key": "01000015",
                    "recNo": 15,
                    "items": {
                        "RA_FILIAL": "01",
                        "RA_MAT": "000015",
                        "RA_SEXO": "M",
                        "RA_APELIDO": "CARLOS EDUARDO",
                        "RA_CC": "10206001",
                        "RA_DEPIR": "00",
                        "RA_CATFUNC": "M",
                        "RA_SALARIO": 6047.78,
                        "RA_ADTPOSE": "***N**"
                    }
                }
            },
            {
                "detail": {
                    "row": 9,
                    "key": "01000016",
                    "recNo": 16,
                    "items": {
                        "RA_FILIAL": "01",
                        "RA_MAT": "000016",
                        "RA_SEXO": "M",
                        "RA_APELIDO": "FELIPE CHAVES",
                        "RA_CC": "10304032",
                        "RA_DEPIR": "00",
                        "RA_CATFUNC": "M",
                        "RA_SALARIO": 2370.4,
                        "RA_ADTPOSE": "***N**"
                    }
                }
            },
            {
                "detail": {
                    "row": 10,
                    "key": "01000018",
                    "recNo": 18,
                    "items": {
                        "RA_FILIAL": "01",
                        "RA_MAT": "000018",
                        "RA_SEXO": "M",
                        "RA_APELIDO": "WAGNER CERQUEIR",
                        "RA_CC": "10304032",
                        "RA_DEPIR": "01",
                        "RA_CATFUNC": "M",
                        "RA_SALARIO": 2370.4,
                        "RA_ADTPOSE": "***N**"
                    }
                }
            }
        ]
    },
    "hasNextPage": false,
    "TotalRows": 10,
    "TotalPages": 1
}
    endContent

    if (Type("oRest")=="O")
        jHeader:=JSONObject():New()
        jHeader["Content-Type"]:="application/json; charset=utf-8"
        jHeader["Cache-Control"]:="no-cache"
        jHeader["Content-Length"]:=LTrim(Str(Len(cJSON)))
        oRest:SetHeaderResponse(jHeader)
        oRest:SetResponse(cJSON)
    endif

    FreeObj(@jHeader)

return(.T.)
