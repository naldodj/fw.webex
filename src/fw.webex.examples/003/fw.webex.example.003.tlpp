/*
  __                            _
 / _|__      ____      __  ___ | |__    ___ __  __
| |_ \ \ /\ / /\ \ /\ / / / _ \| '_ \  / _ \\ \/ /
|  _| \ V  V /  \ V  V / |  __/| |_) ||  __/ >  <
|_|    \_/\_/    \_/\_/   \___||_.__/  \___|/_/\_\

+---> WebExPage
      |
      +---> WebExForm ("Consulta CEP")
      |     |
      |     +---> input[name="cep"] (type=text, placeholder="Digite o CEP")
      |     +---> WebExButton ("Buscar CEP") ? chama buscarCEP_Cartao()
      |
      +---> WebExScript
      |     |
      |     +---> <script> com funcao JS buscarCEP_Cartao()
      |           que faz fetch na API ViaCEP e injeta HTML no resultadoCEP
      |
      +---> WebExControl (div#resultadoCEP.mt-4)
              |
              +---> (dinamicamente preenchido via JS com um .card de resultado do CEP)

Released to Public Domain.
--------------------------------------------------------------------------------------
*/

#include "fw.webex.th"

using namespace FWWebEx

procedure u_FWWebExExample_003()
    local bExecute as codeblock
    local cHTML as character
    local cHTMLFile as character
    local cProcName:=ProcName() as character
    local oTWebChannel:=WebApp():GetTWebChannel() as object
    bExecute:={||FWMsgRun(nil,{||cHTMLFile:=FWWebExExample_003(@cHTML)},"Aguarde",cProcName)}
    FWExampleTools():Execute(bExecute,cProcName,.T.)
    if (!Empty(cHTMLFile).and.File(cHTMLFile))
        FWExampleTools():htmlFileShow(cHTML,cProcName,cHTMLFile,oTWebChannel)
        fErase(cHTMLFile)
    endif
    WebFileTools():ObliterateFWWebExTmpFiles(.T.)
return

static function FWWebExExample_003(cHTML as character) as character

    local cScript as character
    local cProcName:=ProcName() as character
    local cHTMLFile:=cProcName as character

    local oFWWebExPage as object

    WITH WEBEXOBJECT oFWWebExPage CLASS WebExPage ARGS cProcName
        WITH WEBEXOBJECT CLASS WebExBody
            WITH WEBEXOBJECT CLASS WebExMain
                WITH WEBEXOBJECT CLASS WebExForm ARGS "Consulta CEP"
                    .:SetFormMethod("get")
                    .:SetFormAction("javascript:buscarCEP_Cartao()")
                    .:AddField("CEP","cep","text","Digite o CEP")
                    .:AddButton(WebExButton():New("Buscar CEP"))
                END WEBEXOBJECT
                WITH WEBEXOBJECT CLASS WebExScript
                    beginContent var cScript
                        function buscarCEP_Cartao() {
                            const cep = document.querySelector("input[name='cep']").value.trim().replace(/\D/g, '');
                            if (cep.length !== 8) {
                                document.getElementById("resultadoCEP").innerHTML = "<div class='alert alert-danger'>CEP inv&aacute;lido.</div><hr/>";
                                return;
                            }

                            const renderCEP = (data, origem) => {
                                document.getElementById("resultadoCEP").innerHTML = `
                                <div class="alert alert-success">Dados carregados via ${origem}</div><hr/>
                                <div class='card'>
                                    <div class='card-body'>
                                    <h5 class='card-title'>Endere&ccedil;o (${origem})</h5>
                                    <p class='card-text'>
                                        <strong>CEP:</strong> ${data.cep || '-'}<br/>
                                        <strong>Logradouro:</strong> ${data.logradouro || data.street || '-'} |
                                        <strong>Complemento:</strong> ${data.complemento || '-'} |
                                        <strong>Unidade:</strong> ${data.unidade || '-'}<br/>
                                        <strong>Bairro:</strong> ${data.bairro || data.neighborhood  || '-'} |
                                        <strong>Localidade:</strong> ${data.localidade || data.city || '-'}<br/>
                                        <strong>UF:</strong> ${data.uf || data.state || '-'} |
                                        <strong>Estado:</strong> ${data.estado || data.state || '-'}}<br/>
                                        <strong>Regi&atilde;o:</strong> ${data.regiao || '-'} |
                                        <strong>IBGE:</strong> ${data.ibge || '-'}<br/>
                                        <strong>GIA:</strong> ${data.gia || '-'} |
                                        <strong>DDD:</strong> ${data.ddd || '-'}<br/>
                                        <strong>SIAFI:</strong> ${data.siafi || '-'}<br/>
                                    </p>
                                    </div>
                                </div>
                                `;
                            };

                            fetch(`https://viacep.com.br/ws/${cep}/json/`)
                                .then(res => {
                                    if (!res.ok) throw new Error("ViaCEP falhou");
                                    return res.json();
                                })
                                .then(data => {
                                    if (data.erro) throw new Error("CEP n&atilde;o encontrado no ViaCEP");
                                    renderCEP(data, "ViaCEP");
                                })
                                .catch(() => {
                                    fetch(`https://brasilapi.com.br/api/cep/v1/${cep}`)
                                        .then(res => {
                                            if (!res.ok) throw new Error("BrasilAPI falhou");
                                            return res.json();
                                        })
                                        .then(data => renderCEP(data, "BrasilAPI"))
                                        .catch(() => {
                                            document.getElementById("resultadoCEP").innerHTML = "<div class='alert alert-danger'>Erro ao consultar o CEP.</div>";
                                        });
                                });
                        }
                    endContent
                    .:SetContent(cScript)
                END WEBEXOBJECT
                WITH WEBEXOBJECT CLASS WebExControl TYPE div
                    .:SetAttr("id","resultadoCEP")
                    .:SetAttr("class","mt-4")
                END WEBEXOBJECT
            END WEBEXOBJECT
        END WEBEXOBJECT
    END WEBEXOBJECT NOADDCHILD

    WebFileTools():HTMLFromControl(oFWWebExPage,oFWWebExPage:GetFWWebExTmpPath(),@cHTMLFile,@cHTML,.T.)

    WEBEXOBJECT CLEAN

return(cHTMLFile)
