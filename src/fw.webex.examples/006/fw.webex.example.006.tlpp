/*
  __                            _
 / _|__      ____      __  ___ | |__    ___ __  __
| |_ \ \ /\ / /\ \ /\ / / / _ \| '_ \  / _ \\ \/ /
|  _| \ V  V /  \ V  V / |  __/| |_) ||  __/ >  <
|_|    \_/\_/    \_/\_/   \___||_.__/  \___|/_/\_\

+---> WebExPage ("Exemplo 006 - ViaCEP em DataTable")
      |
      +---> <style> (custom table padding)
      |
      +---> WebExForm ("Buscar CEP")
      |     |
      |     +---> input[name="cep"] (type="text", placeholder="Digite o CEP")
      |     |
      |     +---> WebExButton ("Buscar")
      |           |
      |           +---> onclick="buscarCEP(); return false;"
      |
      +---> WebExControl (div#tableResult)
      |
      +---> WebExScript
            |
            +---> <script>
                  |
                  +---> function buscarCEP()
                        |
                        +---> faz requisicao para https://viacep.com.br/ws/{cep}/json/
                        |
                        +---> se erro:
                        |       +---> insere div.alert-danger dentro de #tableResult
                        |
                        +---> se sucesso:
                                |
                                +---> monta tabela HTML com:
                                |     +---> table#example.table.table-striped.table-hover.display.compact.nowrap
                                |           |
                                |           +---> thead > tr > th (Campo, Valor)
                                |           +---> tbody > tr > td (chave, valor)
                                |
                                +---> ativa plugin DataTable com:
                                      |
                                      +---> botoes: copy, csv, excel, print, pdf
                                      +---> paginacao, busca, responsive
                                      +---> idioma pt-BR via CDN
                                      +---> drawCallback para manter altura visual igual entre paginas

Released to Public Domain.
--------------------------------------------------------------------------------------
*/

#include "fw.webex.th"

using namespace FWWebEx

procedure u_FWWebExExample_006()
    local bExecute as codeblock
    local cHTML as character
    local cHTMLFile as character
    local cProcName:=ProcName() as character
    local oTWebChannel:=WebApp():GetTWebChannel() as object
    if (!oTWebChannel:lConnected)
        __oTWebChannel:Connect()
    endif
    bExecute:={||FWMsgRun(nil,{||cHTMLFile:=FWWebExExample_006(@cHTML)},"Aguarde",cProcName)}
    FWExampleTools():Execute(bExecute,cProcName,.T.)
    if (!Empty(cHTMLFile).and.File(cHTMLFile))
        FWExampleTools():htmlFileShow(cHTML,cProcName,cHTMLFile,oTWebChannel)
        fErase(cHTMLFile)
    endif
    WebFileTools():ObliterateFWWebExTmpFiles(.T.)
return

static procedure FWWebExExample_006(cHTML as character) as character

    local cScript as character
    local cProcName:=ProcName() as character
    local cHTMLFile:=cProcName as character

    local oDivTable as object
    local oTableStyle as object

    local oFWWebExPage as object
    local oFWWebExMain as object
    local oFWWebExBody as object

    local oFWWebExForm as object
    local oFWWebExButton as object
    local oFWWebExScript as object

    beginContent var cTableStyle
        table.dataTable.compact tbody td {
            padding: 4px 8px !important;
        }
    endContent
    oTableStyle:=WebExStyle():New("style")
    oTableStyle:SetContent(cTableStyle)

    //Campo para a Pesquisa do CEP
    oFWWebExForm:=WebExForm():New("Buscar CEP")
    oFWWebExForm:AddField("CEP","cep","text","Digite o CEP")

    oFWWebExButton:=WebExButton():New("Buscar")
    oFWWebExButton:SetAttr("onclick","buscarCEP(); return false;")
    oFWWebExForm:AddChild(oFWWebExButton)

    // Tabela que sera preenchida
    oDivTable:=WebExControl():New("div")
    oDivTable:SetAttr("id","tableResult")

    // Script para requisitar ViaCEP e preencher a tabela com DataTables
    //Portuguese-Brasil translation
    //https://datatables.net/plug-ins/i18n/Portuguese-Brasil.html
    /*
        Tabela do DOM (so pra referencia)
        https://datatables.net/reference/option/dom
        | Letra | Elemento que aparece           |
        | ----- | ------------------------------ |
        | **B** | Botoes (exportacao etc.)       |
        | **l** | Seletor de "linhas por pagina" |
        | **f** | Campo de busca (filtro)        |
        | **r** | Texto "processing..."          |
        | **t** | Tabela                         |
        | **i** | Info de "Mostrando x a y de z" |
        | **p** | Paginacao                      |
    */
    beginContent var cScript
        function buscarCEP() {
            const cep = document.getElementsByName('cep')[0].value.replace(/[^0-9]/g,'');
            if (cep.length !== 8) {
                document.getElementById('tableResult').innerHTML = '<div class=\"alert alert-danger\">CEP inv&aacute;lido.</div>';
                return;
            }
            fetch('https://viacep.com.br/ws/' + cep + '/json/')
                .then(response => response.json())
                .then(data => {
                    if (data.erro) {
                        document.getElementById('tableResult').innerHTML = '<div class=\"alert alert-danger\">CEP n&atilde;o encontrado.</div>';
                    } else {
                        let html = '<table id=\"example\" class=\"table table-striped table-hover mt-3 display compact nowrap\">';
                        html += '<thead><tr><th>Campo</th><th>Valor</th></tr></thead><tbody>';
                        for (let key in data) {
                            html += '<tr><td><strong>' + key + '</strong></td><td>' + data[key] + '</td></tr>';
                        }
                        html += '</tbody></table>';
                        document.getElementById('tableResult').innerHTML = html;
                        var table = new DataTable('#example', {
                            dom: 'Blfrtip',
                            lengthMenu: [1,2,3,4,5,6,7,8,9,10,25,50,100,-1],
                            pageLength: 4,//DEFAULT
                            buttons: [
                                'copy',
                                'csv',
                                'print',
                                {
                                    extend: 'excelHtml5',
                                    title: 'u_FWWebExExample_006',
                                    filename: 'relatorio_excel',
                                    autoFilter: true
                                },
                                {
                                    extend: 'pdf',
                                    title: 'u_FWWebExExample_006',
                                    filename: 'relatorio_pdf'
                                }
                            ],
                            responsive: true,
                            className: 'compact',
                            language: {
                                url: 'https://cdn.datatables.net/plug-ins/2.3.2/i18n/pt-BR.json',
                                lengthLabels: {
                                    '-1': 'Todos' //https://datatables.net/reference/option/lengthMenu
                                }
                            },
                            "drawCallback": function(settings) {
                                // This drawCallback ensures consistent table height across pages.
                                // It calculates how many empty rows are needed to fill the remaining space,
                                // and appends them to the table so all pages have the same visual height.
                                const api = this.api();
                                const rows = api.rows({ page: 'current' }).count();
                                const pageSize = api.page.len();
                                const emptyRows = pageSize - rows;
                                for (let i = 0; i < emptyRows; i++) {
                                    $('#example tbody').append('<tr class="empty-row"><td colspan="999">&nbsp;</td></tr>');
                                }
                            }
                        });
                    }
                })
                .catch(() => {
                document.getElementById('tableResult').innerHTML = '<div class=\"alert alert-danger\">Erro ao consultar o CEP.</div>';
            });
        }
    endContent

    oFWWebExScript:=WebExScript():New()
    oFWWebExScript:SetContent(cScript)

    oFWWebExMain:=WebExMain():New()
    oFWWebExMain:AddChild(oFWWebExForm)
    oFWWebExMain:AddChild(oDivTable)

    oFWWebExBody:=WebExBody():New()
    oFWWebExBody:AddChild(oFWWebExMain)

    oFWWebExPage:=WebExPage():New("Exemplo 006 - ViaCEP em DataTable")
    oFWWebExPage:SetEnableDataTable()
    oFWWebExPage:AddChild(oFWWebExBody)

    WebFileTools():HTMLFromControl(oFWWebExPage,oFWWebExPage:GetFWWebExTmpPath(),@cHTMLFile,@cHTML,.T.)

    oFWWebExPage:Clean()

    FreeObj(@oFWWebExPage)
    FreeObj(@oFWWebExMain)
    FreeObj(@oFWWebExBody)
    FreeObj(@oFWWebExForm)
    FreeObj(@oFWWebExButton)
    FreeObj(@oFWWebExScript)
    FreeObj(@oDivTable)
    FreeObj(@oTableStyle)

return(cHTMLFile)
