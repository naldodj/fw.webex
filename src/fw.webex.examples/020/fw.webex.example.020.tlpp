/*
  __                            _
 / _|__      ____      __  ___ | |__    ___ __  __
| |_ \ \ /\ / /\ \ /\ / / / _ \| '_ \  / _ \\ \/ /
|  _| \ V  V /  \ V  V / |  __/| |_) ||  __/ >  <
|_|    \_/\_/    \_/\_/   \___||_.__/  \___|/_/\_\

https://startbootstrap.com/template/sb-admin

Released to Public Domain.
--------------------------------------------------------------------------------------
*/

#include "fw.webex.th"

using namespace FWWebEx

procedure u_FWWebExExample_020()
    local bExecute as codeblock
    local bCallBack as codeblock
    local bJSToAdvPL as codeblock
    local cHTML as character
    local cHTMLFile as character
    local cProcName:=ProcName() as character
    local cCallBackActRet as character
    local oTWebChannel:=WebApp():GetTWebChannel() as object
    bExecute:={||FWMsgRun(nil,{||cHTMLFile:=FWWebExExample_020(@cHTML)},"Aguarde",cProcName)}
    FWExampleTools():Execute(bExecute,cProcName,.T.,.F.)
    if (!Empty(cHTMLFile).and.File(cHTMLFile))
        bCallBack:={|oTWebChannel as object,cCodeType as character,cCodeContent as character,aCallBackAct as array,oTWebEngine as object|u_callProcTLPPEx018(oTWebChannel,cCodeType,cCodeContent,aCallBackAct,oTWebEngine)}
        bJSToAdvPL:={|oTWebChannel as object,cCodeType as character,cCodeContent as character|FWWebEx.WebApp():JSToAdvPL(oTWebChannel,cCodeType,cCodeContent)}
        cCallBackActRet:="CALLBACK_EXEC:CALLBACK_RESPONSE"
        FWExampleTools():htmlFileShow(cHTML,cProcName,cHTMLFile,oTWebChannel,bJSToAdvPL,bCallBack,cCallBackActRet)
        fErase(cHTMLFile)
    endif
    WebFileTools():ObliterateFWWebExTmpFiles(.T.)
return

static procedure FWWebExExample_020(cHTML as character) as character

    local cProcName:=ProcName() as character
    local cHTMLFile:=cProcName as character
    local cSBAdminPath as character
    local cTableStyle as character

    local oTableStyle as object
    local oFWWebExPage as object
    local oFWWebExBody as object

    if (!FWExampleTools():SBAdminCheck(@cSBAdminPath))
        return("")
    endif

    beginContent var cTableStyle

        /* Compactar linhas do DataTables */
        table.dataTable.compact tbody tr {
            height: 28px; /* Altura reduzida para linhas */
            line-height: 28px; /* Alinhar texto verticalmente */
        }

        table.dataTable.compact tbody td,
        table.dataTable.compact thead th {
            padding: 4px 8px; /* Reduzir padding (vertical, horizontal) */
            font-size: 12px; /* Tamanho de fonte menor */
            margin: 0; /* Remover margens */
        }

        table.dataTable.compact thead th {
            font-weight: bold; /* Manter destaque nos cabecalhos */
        }

        /* Garantir que a tabela nao tenha espacamentos extras */
        table.dataTable.compact {
            border-spacing: 0;
            border-collapse: collapse;
        }

        /* Ajustar linhas vazias adicionadas pelo drawCallback */
        table.dataTable.compact tr.empty-row td {
            padding: 0;
            height: 20px; /* Menor altura para linhas vazias */
        }

        /* Evitar quebras de linha e overflow */
        table.dataTable.compact td {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

    endContent
    oTableStyle:=WebExStyle():New()
    oTableStyle:SetContent(cTableStyle)

    /*
        Tabela do DOM (so pra referencia)
        https://datatables.net/reference/option/dom
        | Letra | Elemento que aparece           |
        | ----- | ------------------------------ |
        | **B** | Botoes (exportacao etc.)       |
        | **l** | Seletor de "linhas por pagina" |
        | **f** | Campo de busca (filtro)        |
        | **r** | Texto "processing..."          |
        | **t** | Tabela                         |
        | **i** | Info de "Mostrando x a y de z" |
        | **p** | Paginacao                      |
    */
    // Script com server-side pagination ativado
    beginContent var cScript

        document.addEventListener('DOMContentLoaded', function () {
            FWWebEx.RequestHandler.debug(true);
            document.getElementById('tableResult').innerHTML = `
                <table id="example" class="table table-striped table-hover display compact nowrap">
                    <thead>
                        <tr>
                            <th>Filial</th>
                            <th>Matr&iacute;cula</th>
                            <th>Apelido</th>
                            <th>Centro de Custo</th>
                            <th>Sal&aacute;rio</th>
                            <th>Adt.Servi&ccedil;o</th>
                            <th>Cat.Func.</th>
                            <th>Dep.IRRF.</th>
                            <th>Sexo</th>
                        </tr>
                    </thead>
                </table>`;

            const table = new DataTable('#example', {
                serverSide: true,
                processing: false,
                dom: 'lfrtip',
                lengthMenu: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 25, 30, 35, 40, 45, 50, 100, -1],
                pageLength: 10,
                responsive: false, // Desativar responsividade para reduzir espaco (se nao for essencial)
                className: 'compact', // Ja presente, mantido para reforcar
                language: {
                    url: 'https://cdn.datatables.net/plug-ins/2.3.2/i18n/pt-BR.json',
                    lengthLabels: { '-1': 'Todos' }
                },
                preDrawCallback: () => $('#fwwebex-datatable-custom-loader').show(),
                drawCallback: function () {
                    const api = this.api();
                    const rows = api.rows({ page: 'current' }).count();
                    const pageSize = api.page.len();
                    // Adicionar apenas linhas vazias necessarias, com altura minima
                    $('#example tbody tr.empty-row').remove(); // Remover linhas vazias anteriores
                    for (let i = 0; i < pageSize - rows; i++) {
                        $('#example tbody').append('<tr class="empty-row"><td colspan="9" style="height: 20px; padding: 0;"></td></tr>');
                    }
                    $('#fwwebex-datatable-custom-loader').hide();
                },
                ajax: function (data, callback) {
                    const pageNumber = Math.floor(data.start / data.length) + 1;
                    const rowsPerPage = data.length === -1 ? 999999 : data.length;

                    const request = {
                        ClassName: 'userRestCrudTLPPCoreFunction',
                        FunctionName: 'dna.tech.codAliasPost',
                        codAlias: 'SRA',
                        yesFields: 'RA_FILIAL,RA_MAT,RA_APELIDO,RA_CC,RA_SALARIO,RA_ADTPOSE,RA_CATFUNC,RA_DEPIR,RA_SEXO',
                        Filter: { RA_SEXO: 'M' },
                        PageNumber: pageNumber,
                        RowspPage: rowsPerPage,
                        cEmp: '99',
                        cFil: '01',
                        lChkPrepEnv: false,
                        lHTTPCTLen: true,
                        lFWHTTpEncode: true,
                        cHTTPCTType: 'application/json; charset=UTF-8',
                        lHTTPCTType: true
                    };

                    FWWebEx.RequestHandler.execute({
                        requestData: request,
                        callbackEvent: 'CALLBACK_DATA_RESPONSE',
                        execEvent: 'CALLBACK_EXEC',
                        onResponse: (json) => {
                            console.log('[FWWebEx] Resposta recebida:', JSON.stringify(json, null, 2));
                            try {
                                if (!json || !json.table || !json.table.items) throw new Error('Resposta incompleta');
                                const rows = json.table.items.map(row => {
                                    const i = row.detail?.items || {};
                                    return [
                                        i.RA_FILIAL || '', i.RA_MAT || '', i.RA_APELIDO || '',
                                        i.RA_CC || '', i.RA_SALARIO || '', i.RA_ADTPOSE || '',
                                        i.RA_CATFUNC || '', i.RA_DEPIR || '', i.RA_SEXO || ''
                                    ];
                                });
                                callback({
                                    data: rows,
                                    recordsTotal: json.TotalRows || rows.length,
                                    recordsFiltered: json.TotalRows || rows.length
                                });
                            } catch (err) {
                                console.error('Erro ao processar dados:', err);
                                callback({ data: [], recordsTotal: 0, recordsFiltered: 0 });
                            } finally {
                                $('#fwwebex-datatable-custom-loader').hide();
                            }
                        },
                        onError: (err) => {
                            console.warn('Erro ao executar request:', err.message);
                            callback({ data: [], recordsTotal: 0, recordsFiltered: 0 });
                        }
                    });
                }
            });

            table.on('processing.dt', function (e, settings, processing) {
                $('#fwwebex-datatable-custom-loader').toggle(processing);
            });

            // Definir advplToJs dentro do DOMContentLoaded, mas fora do ajax
            twebchannel = window.twebchannel || {};
            twebchannel.advplToJs = function (codeType, codeContent, objectName) {
                if (codeType === 'CALLBACK_RESPONSE') {
                    try {
                        const response = JSON.parse(codeContent);
                        twebchannel.eventTarget.dispatchEvent(new CustomEvent('CALLBACK_DATA_RESPONSE', { detail: response }));
                    } catch (err) {
                        console.error('[FWWebEx] Erro ao interpretar resposta:', err);
                    }
                } else {
                    console.warn('[FWWebEx] Tipo inesperado:', codeType);
                }
            };

        });

    endContent

    oFWWebExScript:=WebExScript():New()
    oFWWebExScript:SetContent(cScript)
    oFWWebExScript:SetExternalAssets(.F.)

    oFWWebExBody:=WebExBody():New()
    oFWWebExBody:SetAttr("class","sb-nav-fixed")

    WITH WEBEXOBJECT oFWWebExBody
        WITH WEBEXOBJECT CLASS SBAdminNav
            .:NavRightLoadJSONMenu(SBAdminGetRightMenu())
        END WEBEXOBJECT
        //layoutSidenav
        WITH WEBEXOBJECT CLASS SBAdminLayoutSideNav
            WITH WEBEXOBJECT CLASS SBAdminLayoutSideNavNav
            END WEBEXOBJECT
            //TODO: SBAdminLayoutSideNavContent
            WITH WEBEXOBJECT CLASS SBAdminLayoutSideNavContent
                //TODO: Main
                    WITH WEBEXOBJECT CLASS SBAdminMainContent
                        //TODO: Fix me
                        WITH WEBEXOBJECT oSBAdminContainer CLASS SBAdminContainer
                            WITH WEBEXOBJECT CLASS WebExH1
                                .:AddClass("mt-4")
                                .:SetContent("Dashboard")
                            END WEBEXOBJECT
                            oOl1:=WebExControl():New("ol")
                            oOl1:AddClass("breadcrumb mb-4")
                                oLi6:=WebExControl():New("li")
                                oLi6:AddClass("breadcrumb-item active")
                                oLi6:SetContent("Dashboard")
                            oOl1:AddChild(oLi6)
                        oSBAdminContainer:AddChild(oOl1)
                            WITH WEBEXOBJECT oWebExRow1 CLASS WebExRow
                                WITH WEBEXOBJECT CLASS SBAdminCardContainer
                                    WITH WEBEXOBJECT CLASS SBAdminCardWithLink ARGS "Primary Card","#","View Details"
                                        .:AddClass("bg-primary text-white")
                                    END WEBEXOBJECT
                                END WEBEXOBJECT
                                WITH WEBEXOBJECT CLASS SBAdminCardContainer
                                    WITH WEBEXOBJECT CLASS SBAdminCardWithLink ARGS "Warning Card","#","View Details"
                                        .:AddClass("bg-warning text-white")
                                    END WEBEXOBJECT
                                END WEBEXOBJECT
                                WITH WEBEXOBJECT CLASS SBAdminCardContainer
                                    WITH WEBEXOBJECT CLASS SBAdminCardWithLink ARGS "Success Card","#","View Details"
                                        .:AddClass("bg-success text-white")
                                    END WEBEXOBJECT
                                END WEBEXOBJECT
                                WITH WEBEXOBJECT CLASS SBAdminCardContainer
                                    WITH WEBEXOBJECT CLASS SBAdminCardWithLink ARGS "Danger Card","#","View Details"
                                        .:AddClass("bg-danger text-white")
                                    END WEBEXOBJECT
                                END WEBEXOBJECT
                            END WEBEXOBJECT
                            WITH WEBEXOBJECT oWebExRow2 CLASS WebExRow
                                WITH WEBEXOBJECT oSBAdminChart1 CLASS WebExDiv
                                    .:AddClass("col-xl-6")
                                    WITH WEBEXOBJECT oSBAdminCardHeaderChart1 CLASS SBAdminCardHeader ARGS "Area Chart Example","fas fa-chart-area"
                                        WITH WEBEXOBJECT oSBAdminCardBodyChart1 CLASS SBAdminCardBody
                                            WITH WEBEXOBJECT oCanvas1 CLASS WebExControl ARGS "canvas"
                                                .:SetFixedID("myAreaChart")
                                                .:SetAttr("width","100%")
                                                .:SetAttr("height","40")
                                            END WEBEXOBJECT //oCanvas1
                                        END WEBEXOBJECT //oSBAdminCardBodyChart1
                                    END WEBEXOBJECT //oSBAdminCardHeaderChart1
                                END WEBEXOBJECT
                                WITH WEBEXOBJECT oSBAdminChart2 CLASS WebExDiv
                                    .:AddClass("col-xl-6")
                                    WITH WEBEXOBJECT oSBAdminCardHeaderChart2 CLASS SBAdminCardHeader ARGS "Bar Chart Example","fas fa-chart-bar"
                                        WITH WEBEXOBJECT oSBAdminCardBodyChart2 CLASS SBAdminCardBody
                                            WITH WEBEXOBJECT oCanvas2 CLASS WebExControl ARGS "canvas"
                                                .:SetFixedID("myBarChart")
                                                .:SetAttr("width","100%")
                                                .:SetAttr("height","40")
                                            END WEBEXOBJECT //oCanvas2
                                        END WEBEXOBJECT //oSBAdminCardBodyChart2
                                    END WEBEXOBJECT //oSBAdminCardHeaderChart2
                                END WEBEXOBJECT
                            END WEBEXOBJECT //oWebExRow2
                        oSBAdminContainer:AddChild(oWebExRow2)
                            WITH WEBEXOBJECT oSBAdminCardHeaderTable CLASS SBAdminCardHeader ARGS "Data Table","fa-table"
                                WITH WEBEXOBJECT oSBAdminCardBodyTable CLASS SBAdminCardBody
                                    // Adiciona container de tabela
                                    WITH WEBEXOBJECT CLASS WebExDiv
                                        .:SetFixedID("tableResult")
                                    END WEBEXOBJECT
                                END WEBEXOBJECT //oSBAdminCardBodyTable
                            END WEBEXOBJECT //oSBAdminCardHeaderTable
                        END WEBEXOBJECT //oSBAdminContainer
                    END WEBEXOBJECT
                //Main
                //Footer
                    WITH WEBEXOBJECT CLASS SBAdminFooter
                        .:SetCopyrightText("&copy; "+StrZero(Year(Date()),4)+" DNATech ")
                        .:SetPrivacyPolicyHRef("https://github.com/DNATechByNaldoDJ/fw.webex")
                        .:SetPrivacyPolicyText("FWWebEx")
                        .:SetTermsAndConditionsHRef("https://mit-license.org/")
                        .:SetTermsAndConditionsText("Licensed under MIT")
                    END WEBEXOBJECT
                //Footer
            END WEBEXOBJECT
        END WEBEXOBJECT
        WITH WEBEXOBJECT CLASS WebExScript ARGS .F.
            .:SetContent("https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.js")
            .:SetAttr("crossorigin","anonymous")
        END WEBEXOBJECT
        WITH WEBEXOBJECT CLASS WebExScript ARGS .F.
            .:SetContent(cSBAdminPath+"assets/demo/chart-area-demo.js")
        END WEBEXOBJECT
        WITH WEBEXOBJECT CLASS WebExScript ARGS .F.
            .:SetContent(cSBAdminPath+"assets/demo/chart-bar-demo.js")
        END WEBEXOBJECT
    END WEBEXOBJECT NOADDCHILD

    oFWWebExPage:=SBAdminPage():New("fw.webex.example.020.tlpp :: FWWEbEx :: SBADMIN :: SBAdminNav")
    oFWWebExPage:AddChild(oFWWebExBody)
    oFWWebExPage:SetEnableDataTable()
    oFWWebExPage:SetEnableChart(.F.)

    WebFileTools():HTMLFromControl(oFWWebExPage,oFWWebExPage:GetFWWebExTmpPath(),@cHTMLFile,@cHTML,.T.)

    oFWWebExPage:Clean()

    FreeObj(@oFWWebExPage)

return(cHTMLFile)

static function SBAdminGetRightMenu()

    local cSBAdminNavRightMenu as character

    local jSBAdminNavRightMenu as json

    beginContent var cSBAdminNavRightMenu
{
  "menu": [
    {
      "id": "dashboard",
      "label": "Dashboard",
      "icon": "fas fa-tachometer-alt",
      "url": "javascript:showComingSoon('/dashboard');",
      "badge": {
        "label": "Novo",
        "class": "bg-success text-white"
      },
      "subItems": [
        {
          "id": "generalview",
          "label": "Vis&atilde;o Geral",
          "icon": "fas fa-chart-pie",
          "url": "javascript:showComingSoon('/dashboard/overview');",
          "badge": {
            "label": "Novo",
            "class": "bg-success text-white"
          },
          "roles": ["000000"],
          "subItems": []
        }
      ]
    },
    {
      "divider": true
    },
    {
      "id": "indicators",
      "label": "Indicadores",
      "icon": "fas fa-chart-line",
      "url": "ws:KPIS_REQUEST:KPIS_RESPONSE",
      "badge": {
        "label": "Novo",
        "class": "bg-success text-white"
      },
      "wsAction": {
        "class": "userRestCrudTLPPCoreFunction",
        "method": "dna.tech.codAliasPost",
        "params": {
          "codAlias": "SRA",
          "filter": {
            "RA_SEXO": "M"
          },
          "yesFields": "RA_FILIAL,RA_MAT,RA_APELIDO"
        }
      },
      "subItems": []
    }
  ]
}
    endContent

    jSBAdminNavRightMenu:=JSONObject():New()
    jSBAdminNavRightMenu:FromJSON(cSBAdminNavRightMenu)

return(jSBAdminNavRightMenu)
