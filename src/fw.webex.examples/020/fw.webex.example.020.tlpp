/*
  __                            _
 / _|__      ____      __  ___ | |__    ___ __  __
| |_ \ \ /\ / /\ \ /\ / / / _ \| '_ \  / _ \\ \/ /
|  _| \ V  V /  \ V  V / |  __/| |_) ||  __/ >  <
|_|    \_/\_/    \_/\_/   \___||_.__/  \___|/_/\_\

https://startbootstrap.com/template/sb-admin

Released to Public Domain.
--------------------------------------------------------------------------------------
*/

#include "fw.webex.th"

using namespace FWWebEx

procedure u_FWWebExExample_020()
    local bExecute as codeblock
    local bCallBack as codeblock
    local bJSToAdvPL as codeblock
    local cHTML as character
    local cHTMLFile as character
    local cProcName:=ProcName() as character
    local cCallBackActRet as character
    local oTWebChannel:=WebApp():GetTWebChannel() as object
    bExecute:={||FWMsgRun(nil,{||cHTMLFile:=FWWebExExample_020(@cHTML)},"Aguarde",cProcName)}
    FWExampleTools():Execute(bExecute,cProcName,.T.,.F.)
    if (!Empty(cHTMLFile).and.File(cHTMLFile))
        bCallBack:={|oTWebChannel as object,cCodeType as character,cCodeContent as character,aCallBackAct as array,oTWebEngine as object|u_callProcTLPPEx018(oTWebChannel,cCodeType,cCodeContent,aCallBackAct,oTWebEngine)}
        bJSToAdvPL:={|oTWebChannel as object,cCodeType as character,cCodeContent as character|FWWebEx.WebApp():JSToAdvPL(oTWebChannel,cCodeType,cCodeContent)}
        cCallBackActRet:="CALLBACK_EXEC:CALLBACK_RESPONSE"
        FWExampleTools():htmlFileShow(cHTML,cProcName,cHTMLFile,oTWebChannel,bJSToAdvPL,bCallBack,cCallBackActRet)
        fErase(cHTMLFile)
    endif
    WebFileTools():ObliterateFWWebExTmpFiles(.T.)
return

static procedure FWWebExExample_020(cHTML as character) as character

    local cProcName:=ProcName() as character
    local cHTMLFile:=cProcName as character
    local cSBAdminPath as character

    local cUserID:=if((Type("__cUserID")=="C").and.(!Empty(__cUserID)),__cUserID,"000000")
    local cScript as character
    local cPageStyle as character

    local oFWWebExPage as object
    local oFWWebExBody as object

    if (!FWExampleTools():SBAdminCheck(@cSBAdminPath))
        return("")
    endif

    beginContent var cPageStyle

        /* ApexChart Area */
        #myBarApexChart, #myAreaApexChart {
            width: 100%;
            height: 200px;
        }

        #myPieApexChart {
            width: 100%;
            height: 480px; /* ou a altura que quiser pra ficar proporcional ao Chart.js */
            max-height: 520px; /* opcional, evita explodir se o conteudo for denso */
            margin: 0 auto; /* centraliza se precisar */
        }

        /* Filtro Customizado */
        .datatable-filter-wrapper {
            display: inline-block;
            width: 100%;
            text-align: right; /* ou left */
        }

        /* Compactar linhas do DataTables */
        table.dataTable.compact tbody tr {
            height: 28px; /* Altura reduzida para linhas */
            line-height: 28px; /* Alinhar texto verticalmente */
        }

        table.dataTable.compact tbody td,
        table.dataTable.compact thead th {
            padding: 4px 8px; /* Reduzir padding (vertical, horizontal) */
            font-size: 12px; /* Tamanho de fonte menor */
            margin: 0; /* Remover margens */
        }

        table.dataTable.compact thead th {
            font-weight: bold; /* Manter destaque nos cabecalhos */
        }

        /* Garantir que a tabela nao tenha espacamentos extras */
        table.dataTable.compact {
            border-spacing: 0;
            border-collapse: collapse;
        }

        /* Ajustar linhas vazias adicionadas pelo drawCallback */
        table.dataTable.compact tr.empty-row td {
            padding: 0;
            height: 20px; /* Menor altura para linhas vazias */
        }

        /* Evitar quebras de linha e overflow */
        table.dataTable.compact td {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

    endContent

    /*
        Tabela do DOM (so pra referencia)
        https://datatables.net/reference/option/dom
        | Letra | Elemento que aparece           |
        | ----- | ------------------------------ |
        | **B** | Botoes (exportacao etc.)       |
        | **l** | Seletor de "linhas por pagina" |
        | **f** | Campo de busca (filtro)        |
        | **r** | Texto "processing..."          |
        | **t** | Tabela                         |
        | **i** | Info de "Mostrando x a y de z" |
        | **p** | Paginacao                      |
    */
    // Script com server-side pagination ativado
    beginContent var cScript

        document.addEventListener('DOMContentLoaded', function () {
            FWWebEx.RequestHandler.debug(true);
            document.getElementById('tableResult').innerHTML = `
                <!-- fora da tabela, sera movido via JS -->
                <div id="meuFiltroCustom" class="datatable-filter-wrapper mb-2">
                    <div class="input-group input-group-sm">
                        <select id="searchField" class="form-select form-select-sm"></select>
                        <input id="searchValue" type="text" class="form-control" placeholder="Digite o valor..." />
                        <button id="btnSearch" class="btn btn-primary" type="button">Pesquisar</button>
                    </div>
                </div>
                <table id="example" class="table table-striped table-hover display compact nowrap">
                    <thead>
                        <tr>
                            <th>Filial</th>
                            <th>Matr&iacute;cula</th>
                            <th>Apelido</th>
                            <th>Centro de Custo</th>
                            <th>Sal&aacute;rio</th>
                            <th>Adt.Servi&ccedil;o</th>
                            <th>Cat.Func.</th>
                            <th>Dep.IRRF.</th>
                            <th>Sexo</th>
                        </tr>
                    </thead>
                </table>`;

                const yesFields = 'RA_FILIAL,RA_MAT,RA_APELIDO,RA_CC,RA_SALARIO,RA_ADTPOSE,RA_CATFUNC,RA_DEPIR,RA_SEXO';

                function montarCampoSelect() {
                    const fields = yesFields.split(',');
                    const select = document.getElementById("searchField");
                    fields.forEach(field => {
                        const opt = document.createElement("option");
                        opt.value = field.trim();
                        opt.textContent = field.trim();
                        select.appendChild(opt);
                    });
                }

                montarCampoSelect(); // monta o select com base no yesFields

                // Adiciona o filtro customizado no lugar da search bar padrao
                const filtroEl = document.getElementById("meuFiltroCustom");
                const containerFiltro = document.querySelector("div.topFiltro");
                if (containerFiltro && filtroEl) {
                    containerFiltro.appendChild(filtroEl);
                    filtroEl.style.display = 'block'; // caso esteja oculto
                }

            const table = new DataTable('#example', {
                serverSide: true,
                processing: false,
                dom: '<"topFiltro">Blfrtip'.replace('f',' '), // cria um placeholder "topFiltro" no lugar do search
                lengthMenu: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 25, 30, 35, 40, 45, 50, 100, -1],
                pageLength: 10,
                responsive: false, // Desativar responsividade para reduzir espaco (se nao for essencial)
                className: 'compact', // Ja presente, mantido para reforcar
                language: {
                    url: 'https://cdn.datatables.net/plug-ins/2.3.2/i18n/pt-BR.json',
                    lengthLabels: { '-1': 'Todos' }
                },
                preDrawCallback: () => $('#fwwebex-datatable-custom-loader').show(),
                drawCallback: function () {
                    const api = this.api();
                    const rows = api.rows({ page: 'current' }).count();
                    const pageSize = api.page.len();
                    // Adicionar apenas linhas vazias necessarias, com altura minima
                    $('#example tbody tr.empty-row').remove(); // Remover linhas vazias anteriores
                    for (let i = 0; i < pageSize - rows; i++) {
                        $('#example tbody').append('<tr class="empty-row"><td colspan="9" style="height: 20px; padding: 0;"></td></tr>');
                    }
                    $('#fwwebex-datatable-custom-loader').hide();
                },
                ajax: function (data, callback) {
                    const pageNumber = Math.floor(data.start / data.length) + 1;
                    const rowsPerPage = data.length === -1 ? 999999 : data.length;

                    const request = {
                        ClassName: 'userRestCrudTLPPCoreFunction',
                        FunctionName: 'dna.tech.codAliasPost',
                        codAlias: 'SRA',
                        yesFields: 'RA_FILIAL,RA_MAT,RA_APELIDO,RA_CC,RA_SALARIO,RA_ADTPOSE,RA_CATFUNC,RA_DEPIR,RA_SEXO',
                        Filter: Object.assign({
                            RA_SEXO: 'M'
                        }, filtroCampo && filtroValor ? { [filtroCampo]: filtroValor } : {}),
                        PageNumber: pageNumber,
                        RowspPage: rowsPerPage,
                        cEmp: '99',
                        cFil: '01',
                        lChkPrepEnv: false,
                        lHTTPCTLen: true,
                        lFWHTTpEncode: true,
                        cHTTPCTType: 'application/json; charset=UTF-8',
                        lHTTPCTType: true
                    };

                    FWWebEx.RequestHandler.execute({
                        requestData: request,
                        callbackEvent: 'CALLBACK_DATA_RESPONSE',
                        execEvent: 'CALLBACK_EXEC',
                        onResponse: (json) => {
                            console.log('[FWWebEx] Resposta recebida:', JSON.stringify(json, null, 2));
                            try {
                                if (!json || !json.table || !json.table.items) throw new Error('Resposta incompleta');
                                const rows = json.table.items.map(row => {
                                    const i = row.detail?.items || {};
                                    return [
                                        i.RA_FILIAL || '', i.RA_MAT || '', i.RA_APELIDO || '',
                                        i.RA_CC || '', i.RA_SALARIO || '', i.RA_ADTPOSE || '',
                                        i.RA_CATFUNC || '', i.RA_DEPIR || '', i.RA_SEXO || ''
                                    ];
                                });
                                callback({
                                    data: rows,
                                    recordsTotal: json.TotalRows || rows.length,
                                    recordsFiltered: json.TotalRows || rows.length
                                });
                            } catch (err) {
                                console.error('Erro ao processar dados:', err);
                                callback({ data: [], recordsTotal: 0, recordsFiltered: 0 });
                            } finally {
                                $('#fwwebex-datatable-custom-loader').hide();
                            }
                        },
                        onError: (err) => {
                            console.warn('Erro ao executar request:', err.message);
                            callback({ data: [], recordsTotal: 0, recordsFiltered: 0 });
                        }
                    });
                }
            });

            let filtroCampo = "";
            let filtroValor = "";

            document.getElementById("btnSearch").addEventListener("click", function () {
                filtroCampo = document.getElementById("searchField").value;
                filtroValor = document.getElementById("searchValue").value.trim();
                table.ajax.reload(); // recarrega o DataTable usando o novo filtro
            });

            table.on('processing.dt', function (e, settings, processing) {
                $('#fwwebex-datatable-custom-loader').toggle(processing);
            });

            // Definir advplToJs dentro do DOMContentLoaded, mas fora do ajax
            twebchannel = window.twebchannel || {};
            twebchannel.advplToJs = function (codeType, codeContent, objectName) {
                if (codeType === 'CALLBACK_RESPONSE') {
                    try {
                        const response = JSON.parse(codeContent);
                        twebchannel.eventTarget.dispatchEvent(new CustomEvent('CALLBACK_DATA_RESPONSE', { detail: response }));
                    } catch (err) {
                        console.error('[FWWebEx] Erro ao interpretar resposta:', err);
                    }
                } else {
                    console.warn('[FWWebEx] Tipo inesperado:', codeType);
                }
            };

        });

    endContent

    cScript+=CRLF
    //ApexChartSpripts
    cScript+=ApexChartScripts()

    oFWWebExScript:=WebExScript():New()
    oFWWebExScript:SetExternalAssets(.F.)
    oFWWebExScript:SetContent(cScript)

    oFWWebExBody:=WebExBody():New()
    oFWWebExBody:SetAttr("class","sb-nav-fixed")

    WITH WEBEXOBJECT oFWWebExBody
        WITH WEBEXOBJECT CLASS SBAdminNav
            .:NavRightLoadJSONMenu(SBAdminGetRightMenu())
        END WEBEXOBJECT
        //layoutSidenav
        WITH WEBEXOBJECT CLASS SBAdminLayoutSideNav
            WITH WEBEXOBJECT CLASS SBAdminLayoutSideNavNav
                //Menu
                .:NavLoadJSONMenu(SBAdminGetMenu(cSBAdminPath))
                //Menu Footer
                .:GetMemberData("oSideNavFooterDiv"):SetContent("Logged in as: "+FWGetUserName(cUserID))
                .:GetMemberData("oSideNavFooter"):SetContent("SBAdmin :: FWWebEx",.:GetMemberData("oSideNavFooterDiv"):GetID())
            END WEBEXOBJECT
            WITH WEBEXOBJECT CLASS SBAdminLayoutSideNavContent
                WITH WEBEXOBJECT CLASS SBAdminMainContent
                    WITH WEBEXOBJECT oSBAdminContainer CLASS SBAdminContainer
                        WITH WEBEXOBJECT CLASS WebExH1
                            .:AddClass("mt-4")
                            .:SetContent("Dashboard")
                        END WEBEXOBJECT
                        WITH WEBEXOBJECT CLASS WebExOL
                            .:AddClass("breadcrumb mb-4")
                            WITH WEBEXOBJECT CLASS WebExLI
                                .:AddClass("breadcrumb-item active")
                                .:SetContent("Dashboard")
                            END WEBEXOBJECT
                        END WEBEXOBJECT
                        WITH WEBEXOBJECT oWebExRow1 CLASS WebExRow
                            WITH WEBEXOBJECT CLASS SBAdminCardContainer
                                WITH WEBEXOBJECT CLASS SBAdminCardWithLink ARGS "Primary Card","#","View Details"
                                    .:AddClass("bg-primary text-white")
                                END WEBEXOBJECT
                            END WEBEXOBJECT
                            WITH WEBEXOBJECT CLASS SBAdminCardContainer
                                WITH WEBEXOBJECT CLASS SBAdminCardWithLink ARGS "Warning Card","#","View Details"
                                    .:AddClass("bg-warning text-white")
                                END WEBEXOBJECT
                            END WEBEXOBJECT
                            WITH WEBEXOBJECT CLASS SBAdminCardContainer
                                WITH WEBEXOBJECT CLASS SBAdminCardWithLink ARGS "Success Card","#","View Details"
                                    .:AddClass("bg-success text-white")
                                END WEBEXOBJECT
                            END WEBEXOBJECT
                            WITH WEBEXOBJECT CLASS SBAdminCardContainer
                                WITH WEBEXOBJECT CLASS SBAdminCardWithLink ARGS "Danger Card","#","View Details"
                                    .:AddClass("bg-danger text-white")
                                END WEBEXOBJECT
                            END WEBEXOBJECT
                        END WEBEXOBJECT
                        WITH WEBEXOBJECT oWebExRow2 CLASS WebExRow
                            WITH WEBEXOBJECT oSBAdminChartArea CLASS WebExDiv
                                .:AddClass("col-xl-6")
                                WITH WEBEXOBJECT oSBAdminCardHeaderChartArea CLASS SBAdminCardHeader ARGS "Area Chart.js Example","fas fa-chart-area"
                                    WITH WEBEXOBJECT oSBAdminCardBodyChartArea CLASS SBAdminCardBody
                                        WITH WEBEXOBJECT oCanvasChartArea CLASS WebExControl ARGS "canvas"
                                            .:SetFixedID("myAreaChart")
                                            .:SetAttr("width","100%")
                                            .:SetAttr("height","40")
                                        END WEBEXOBJECT //oCanvasChartArea
                                    END WEBEXOBJECT //oSBAdminCardBodyChartArea
                                END WEBEXOBJECT //oSBAdminCardHeaderChartArea
                            END WEBEXOBJECT
                            WITH WEBEXOBJECT oSBAdminChartBar CLASS WebExDiv
                                .:AddClass("col-xl-6")
                                WITH WEBEXOBJECT oSBAdminCardHeaderChartBar CLASS SBAdminCardHeader ARGS "Bar Chart.js Example","fas fa-chart-bar"
                                    WITH WEBEXOBJECT oSBAdminCardBodyChartBar CLASS SBAdminCardBody
                                        WITH WEBEXOBJECT oCanvasChartBar CLASS WebExControl ARGS "canvas"
                                            .:SetFixedID("myBarChart")
                                            .:SetAttr("width","100%")
                                            .:SetAttr("height","40")
                                        END WEBEXOBJECT //oCanvasChartBar
                                    END WEBEXOBJECT //oSBAdminCardBodyChartBar
                                END WEBEXOBJECT //oSBAdminCardHeaderChartBar
                            END WEBEXOBJECT
                        END WEBEXOBJECT //oWebExRow2
                        WITH WEBEXOBJECT oWebExRow3 CLASS WebExRow
                            WITH WEBEXOBJECT oSBAdminChartPie CLASS WebExDiv
                                .:AddClass("col-xl-12")
                                WITH WEBEXOBJECT oSBAdminCardHeaderChartPie CLASS SBAdminCardHeader ARGS "Pie Chart.js Example","fas fa-chart-pie"
                                    WITH WEBEXOBJECT oSBAdminCardBodyChartPie CLASS SBAdminCardBody
                                        WITH WEBEXOBJECT oCanvasChartPie CLASS WebExControl ARGS "canvas"
                                            .:SetFixedID("myPieChart")
                                            .:SetAttr("width","100%")
                                            .:SetAttr("height","40")
                                        END WEBEXOBJECT //oCanvasChartPie
                                    END WEBEXOBJECT //oSBAdminCardBodyChartPie
                                END WEBEXOBJECT //oSBAdminCardHeaderChartPie
                            END WEBEXOBJECT
                        END WEBEXOBJECT //oWebExRow3
                        WITH WEBEXOBJECT oWebExRow4 CLASS WebExRow
                            WITH WEBEXOBJECT oSBAdminApexChartArea CLASS WebExDiv
                                .:AddClass("col-xl-6")
                                WITH WEBEXOBJECT oSBAdminCardHeaderApexChartArea CLASS SBAdminCardHeader ARGS "Area ApexChart.js Example","fas fa-chart-area"
                                    WITH WEBEXOBJECT oSBAdminCardBodyApexChartArea CLASS SBAdminCardBody
                                        WITH WEBEXOBJECT oDivApexChartArea CLASS WebExDiv
                                            .:SetFixedID("myAreaApexChart")
                                        END WEBEXOBJECT //oDivApexChartArea
                                    END WEBEXOBJECT //oSBAdminCardBodyApexChartArea
                                END WEBEXOBJECT //oSBAdminCardHeaderApexChartArea
                            END WEBEXOBJECT
                            WITH WEBEXOBJECT oSBAdminApexChartBar CLASS WebExDiv
                                .:AddClass("col-xl-6")
                                WITH WEBEXOBJECT oSBAdminCardHeaderApexChartBar CLASS SBAdminCardHeader ARGS "Bar ApexChart.js Example","fas fa-chart-bar"
                                    WITH WEBEXOBJECT oSBAdminCardBodyApexChartBar CLASS SBAdminCardBody
                                        WITH WEBEXOBJECT oDivApexChartBar CLASS WebExDiv
                                            .:SetFixedID("myBarApexChart")
                                        END WEBEXOBJECT //oDivApexChartBar
                                    END WEBEXOBJECT //oSBAdminCardBodyApexChartBar
                                END WEBEXOBJECT //oSBAdminCardHeaderApexChartBar
                            END WEBEXOBJECT
                        END WEBEXOBJECT //oWebExRow4
                        WITH WEBEXOBJECT oWebExRow5 CLASS WebExRow
                            WITH WEBEXOBJECT oSBAdminApexChartPie CLASS WebExDiv
                                .:AddClass("col-xl-12")
                                WITH WEBEXOBJECT oSBAdminCardHeaderApexChartPie CLASS SBAdminCardHeader ARGS "Pie ApexChart.js Example","fas fa-chart-pie"
                                    WITH WEBEXOBJECT oSBAdminCardBodyApexChartPie CLASS SBAdminCardBody
                                        WITH WEBEXOBJECT oDivApexChartPie CLASS WebExDiv
                                            .:SetFixedID("myPieApexChart")
                                            .:SetAttr("style","width: 100%; height: 200px;")
                                        END WEBEXOBJECT //oDivApexChartPie
                                    END WEBEXOBJECT //oSBAdminCardBodyApexChartPie
                                END WEBEXOBJECT //oSBAdminCardHeaderApexChartPie
                            END WEBEXOBJECT
                        END WEBEXOBJECT //oWebExRow5
                        WITH WEBEXOBJECT oSBAdminCardHeaderTable CLASS SBAdminCardHeader ARGS "Data Table","fa-table"
                            WITH WEBEXOBJECT oSBAdminCardBodyTable CLASS SBAdminCardBody
                                // Adiciona container de tabela
                                WITH WEBEXOBJECT CLASS WebExDiv
                                    .:SetFixedID("tableResult")
                                END WEBEXOBJECT
                            END WEBEXOBJECT //oSBAdminCardBodyTable
                        END WEBEXOBJECT //oSBAdminCardHeaderTable
                    END WEBEXOBJECT //oSBAdminContainer
                END WEBEXOBJECT
                //Main
                //Footer
                    WITH WEBEXOBJECT CLASS SBAdminFooter
                        .:SetCopyrightText("&copy; "+StrZero(Year(Date()),4)+" DNATech ")
                        .:SetPrivacyPolicyHRef("https://github.com/DNATechByNaldoDJ/fw.webex")
                        .:SetPrivacyPolicyText("FWWebEx")
                        .:SetTermsAndConditionsHRef("https://mit-license.org/")
                        .:SetTermsAndConditionsText("Licensed under MIT")
                    END WEBEXOBJECT
                //Footer
            END WEBEXOBJECT
        END WEBEXOBJECT
        //TODO: Verificar pq nao consigo habilitar Chart.js via oFWWebExPage:SetEnableChart(.T.). Versao?
        WITH WEBEXOBJECT CLASS WebExScript ARGS .F.
            .:SetContent("https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.js")
            .:SetAttr("crossorigin","anonymous")
        END WEBEXOBJECT
        WITH WEBEXOBJECT CLASS WebExScript ARGS .F.
            .:SetContent(cSBAdminPath+"assets/demo/chart-area-demo.js")
        END WEBEXOBJECT
        WITH WEBEXOBJECT CLASS WebExScript ARGS .F.
            .:SetContent(cSBAdminPath+"assets/demo/chart-bar-demo.js")
        END WEBEXOBJECT
        WITH WEBEXOBJECT CLASS WebExScript ARGS .F.
            .:SetContent(cSBAdminPath+"assets/demo/chart-pie-demo.js")
        END WEBEXOBJECT
    END WEBEXOBJECT NOADDCHILD

    oFWWebExPage:=SBAdminPage():New("fw.webex.example.020.tlpp :: FWWEbEx :: SBADMIN :: SBAdminNav")
    oFWWebExPage:AddChild(oFWWebExBody)
    oFWWebExPage:SetEnableDataTable(.T.)
    oFWWebExPage:SetEnableChart(.F.)
    oFWWebExPage:SetEnableApexChart(.T.)

    WITH WEBEXOBJECT oFWWebExPage
        WITH WEBEXOBJECT CLASS WebExStyle
            .:SetContent(cPageStyle)
        END WEBEXOBJECT
    END WEBEXOBJECT NOADDCHILD

    WebFileTools():HTMLFromControl(oFWWebExPage,oFWWebExPage:GetFWWebExTmpPath(),@cHTMLFile,@cHTML,.T.)

    oFWWebExPage:Clean()

    FreeObj(@oFWWebExPage)

return(cHTMLFile)

static function SBAdminGetMenu(cSBAdminPath)

    local cSBAdminNavMenu as character

    local jSBAdminNavMenu as json

    beginContent var cSBAdminNavMenu
{
    "menu": [
        {
            "id": "core",
            "label": "Core",
            "heading": true,
            "badge": {
                "label": "Novo",
                "class": "bg-success text-white"
            }
        },
        {
            "id": "dashboard",
            "label": "Dashboard",
            "icon": "fas fa-tachometer-alt",
            "url": "cSBAdminPath+index.html"
        },
        {
            "id": "interface",
            "label": "Interface",
            "heading": true
        },
        {
            "id": "layouts",
            "label": "Layouts",
            "icon": "fas fa-columns",
            "url": "#",
            "subItems": [
                {
                    "id": "static_navigation",
                    "label": "Static Navigation",
                    "url": "cSBAdminPath+layout-static.html",
                    "badge": {
                        "label": "Novo",
                        "class": "bg-success text-white"
                    }
                },
                {
                    "id": "light_sidenav",
                    "label": "Light Sidenav",
                    "url": "cSBAdminPath+layout-sidenav-light.html"
                }
            ]
        },
        {
            "id": "pages",
            "label": "Pages",
            "icon": "fas fa-book-open",
            "url": "#",
            "subItems": [
                {
                    "id": "pages_authentication",
                    "label": "Authentication",
                    "subItems": [
                        {
                            "id": "pages_authentication_login",
                            "label": "Login",
                            "url": "cSBAdminPath+login.html"
                        },
                        {
                            "id": "pages_authentication_register",
                            "label": "Register",
                            "url": "cSBAdminPath+register.html"
                        },
                        {
                            "id": "pages_authentication_password",
                            "label": "Password",
                            "url": "cSBAdminPath+password.html"
                        }
                    ]
                },
                {
                    "id": "pages_error",
                    "label": "Error",
                    "subItems": [
                        {
                            "id": "pages_error_401",
                            "label": "401 Page",
                            "url": "cSBAdminPath+401.html"
                        },
                        {
                            "id": "pages_error_404",
                            "label": "404 Page",
                            "url": "cSBAdminPath+404.html"
                        },
                        {
                            "id": "pages_error_500",
                            "label": "500 Page",
                            "url": "cSBAdminPath+500.html"
                        }
                    ]
                }
            ]
        },
        {
            "id": "addons",
            "label": "ADDONS",
            "heading": true
        },
        {
            "id": "charts",
            "label": "Charts",
            "icon": "fas fa-chart-area",
            "url": "cSBAdminPath+charts.html"
        },
        {
            "id": "tables",
            "label": "Tables",
            "icon": "fas fa-table",
            "url": "cSBAdminPath+tables.html"
        }
    ]
}
    endContent
    cSBAdminNavMenu:=StrTran(cSBAdminNavMenu,"cSBAdminPath+",cSBAdminPath)

    jSBAdminNavMenu:=JSONObject():New()
    jSBAdminNavMenu:FromJSON(cSBAdminNavMenu)

return(jSBAdminNavMenu)

static function SBAdminGetRightMenu()

    local cSBAdminNavRightMenu as character

    local jSBAdminNavRightMenu as json

    beginContent var cSBAdminNavRightMenu
{
  "menu": [
    {
      "id": "dashboard",
      "label": "Dashboard",
      "icon": "fas fa-tachometer-alt",
      "url": "javascript:showComingSoon('/dashboard');",
      "badge": {
        "label": "Novo",
        "class": "bg-success text-white"
      },
      "subItems": [
        {
          "id": "generalview",
          "label": "Vis&atilde;o Geral",
          "icon": "fas fa-chart-pie",
          "url": "javascript:showComingSoon('/dashboard/overview');",
          "badge": {
            "label": "Novo",
            "class": "bg-success text-white"
          },
          "roles": ["000000"],
          "subItems": []
        }
      ]
    },
    {
      "divider": true
    },
    {
      "id": "indicators",
      "label": "Indicadores",
      "icon": "fas fa-chart-line",
      "url": "ws:KPIS_REQUEST:KPIS_RESPONSE",
      "badge": {
        "label": "Novo",
        "class": "bg-success text-white"
      },
      "wsAction": {
        "class": "userRestCrudTLPPCoreFunction",
        "method": "dna.tech.codAliasPost",
        "params": {
          "codAlias": "SRA",
          "filter": {
            "RA_SEXO": "M"
          },
          "yesFields": "RA_FILIAL,RA_MAT,RA_APELIDO"
        }
      },
      "subItems": []
    }
  ]
}
    endContent

    jSBAdminNavRightMenu:=JSONObject():New()
    jSBAdminNavRightMenu:FromJSON(cSBAdminNavRightMenu)

return(jSBAdminNavRightMenu)

static function ApexChartScripts() as character

    local cScript as character

    beginContent var cScript

        /* ApexChartSpripts */

        document.addEventListener('DOMContentLoaded', function () {

            FWWebExWaitForElementID('myBarApexChart', function (element) {
            var options = {
                chart: {
                    type: 'bar',
                    fontFamily: '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif',
                    foreColor: '#292b2c',
                    toolbar: {
                        show: false
                    }
                    },
                    series: [{
                        name: 'Revenue',
                        data: [4215, 5312, 6251, 7841, 9821, 14984]
                    }],
                    xaxis: {
                        categories: ['January', 'February', 'March', 'April', 'May', 'June'],
                        labels: {
                            maxItems: 6
                        },
                        axisBorder: {
                            show: true
                        },
                        axisTicks: {
                            show: true
                        },
                        grid: {
                            show: false
                        }
                    },
                    yaxis: {
                        min: 0,
                        max: 15000,
                        tickAmount: 5,
                        labels: {
                            formatter: function (value) {
                                return Math.round(value);
                            }
                        }
                    },
                    colors: ['rgba(2,117,216,1)'],
                    dataLabels: {
                        enabled: false
                    },
                    plotOptions: {
                        bar: {
                            columnWidth: '70%'
                        }
                    },
                legend: {
                    show: false
                },
                grid: {
                    show: true,
                    xaxis: {
                        lines: {
                        show: false
                        }
                    },
                    yaxis: {
                        lines: {
                        show: true
                        }
                    }
                }
            };

            var chart = new ApexCharts(element, options);
                chart.render();
            });

            FWWebExWaitForElementID('myAreaApexChart', function (element) {
                var options = {
                    chart: {
                        type: 'area',
                        fontFamily: '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif',
                        foreColor: '#292b2c',
                        toolbar: {
                            show: false
                        }
                        },
                        series: [{
                            name: 'Sessions',
                            data: [
                                { x: new Date('2025-03-01').getTime(), y: 10000 },
                                { x: new Date('2025-03-02').getTime(), y: 30162 },
                                { x: new Date('2025-03-03').getTime(), y: 26263 },
                                { x: new Date('2025-03-04').getTime(), y: 18394 },
                                { x: new Date('2025-03-05').getTime(), y: 18287 },
                                { x: new Date('2025-03-06').getTime(), y: 28682 },
                                { x: new Date('2025-03-07').getTime(), y: 31274 },
                                { x: new Date('2025-03-08').getTime(), y: 33259 },
                                { x: new Date('2025-03-09').getTime(), y: 25849 },
                                { x: new Date('2025-03-10').getTime(), y: 24159 },
                                { x: new Date('2025-03-11').getTime(), y: 32651 },
                                { x: new Date('2025-03-12').getTime(), y: 31984 },
                                { x: new Date('2025-03-13').getTime(), y: 38451 }
                            ]
                        }],
                        xaxis: {
                        type: 'datetime',
                        labels: {
                            format: 'MMM d',
                            maxItems: 7
                        },
                        axisBorder: {
                            show: true
                        },
                        axisTicks: {
                            show: true
                        },
                        grid: {
                            show: false
                        }
                    },
                    yaxis: {
                        min: 0,
                        max: 40000,
                        tickAmount: 5,
                        labels: {
                            formatter: function (value) {
                            return Math.round(value);
                            }
                        }
                    },
                    fill: {
                        type: 'solid',
                        opacity: 0.2,
                        colors: ['rgba(2,117,216,0.2)']
                    },
                    stroke: {
                        curve: 'smooth',
                        width: 2,
                        colors: ['rgba(2,117,216,1)']
                    },
                    markers: {
                        size: 5,
                        colors: ['rgba(2,117,216,1)'],
                        strokeColors: ['rgba(255,255,255,0.8)'],
                        strokeWidth: 2,
                        hover: {
                            size: 5
                        }
                    },
                    colors: ['rgba(2,117,216,1)'],
                    dataLabels: {
                        enabled: false
                    },
                    legend: {
                        show: false
                    },
                    grid: {
                        show: true,
                        xaxis: {
                            lines: {
                            show: false
                        }
                    },
                    yaxis: {
                        lines: {
                            show: true,
                            strokeColor: 'rgba(0, 0, 0, 0.125)'
                        }
                    }
                }
            };

            var chart = new ApexCharts(element, options);
                chart.render();
            });

            FWWebExWaitForElementID('myPieApexChart', function (element) {
                var options = {
                    chart: {
                    width: '100%', // Define a largura como 100% para se ajustar ao conteiner
                    height: 480,   // Define a altura fixa como 200px
                    type: 'pie',
                    fontFamily: '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif',
                    foreColor: '#292b2c',
                        toolbar: {
                            show: false
                        }
                    },
                    series: [12.21, 15.58, 11.25, 8.32],
                    labels: ['Blue', 'Red', 'Yellow', 'Green'],
                    colors: ['#007bff', '#dc3545', '#ffc107', '#28a745'],
                    dataLabels: {
                        enabled: true,
                        formatter: function (val) {
                            return val.toFixed(2) + '%';
                        }
                    },
                    legend: {
                        show: true,
                        position: 'bottom'
                    },
                    responsive: [{
                        breakpoint: 480,
                        options: {
                            chart: {
                                width: '100%', // Mantem 100% para dispositivos menores
                                height: 280    // Ajusta a altura para telas menores, se necessario
                            },
                            legend: {
                            position: 'bottom'
                        }
                    }
                }]
            };

            var chart = new ApexCharts(element, options);
                chart.render();
            });

        });

    endContent

return(cScript)
